<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.8.1 on win32)" generated="20200723 09:59:35.940" rpa="false">
<suite id="s1" name="Setup Prebatch" source="C:\RobotFramework\PyCharm\SAANA\comboPrimary\setup_prebatch.robot">
<test id="s1-t1" name="SetupComboPri">
<kw name="Test setup" library="Set_Teardown" type="setup">
<arguments>
<arg>${environment name}</arg>
</arguments>
<kw name="Set environment2" library="Environments1">
<arguments>
<arg>${environment name}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>&amp;{environment}</arg>
<arg>owner=</arg>
<arg>appprefix=</arg>
<arg>jobprefix=</arg>
<arg>datasetprefix=</arg>
<arg>cicsk=</arg>
<arg>companynumber=</arg>
<arg>pool=</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.503" endtime="20200723 09:59:36.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='RLSES'</arg>
<arg>Set RLSES</arg>
</arguments>
<kw name="Set RLSES" library="Environments1">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>owner=RLSES</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>appprefix=SAN</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>jobprefix=SAN</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>datasetprefix=OPBK.rlse.icr</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>cicsk=CK35</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>companynumber=20000</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>pool=01</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:36.503" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='CK0A'</arg>
<arg>Set CK0A</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:36.518"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:36.503" endtime="20200723 09:59:36.518"></status>
</kw>
<kw name="Connect to mainframe" library="SharedKeywordsSAN">
<kw name="Connect" library="py3270lib">
<doc>Connect to a host</doc>
<arguments>
<arg>Y:192.168.14.6:2399</arg>
</arguments>
<msg timestamp="20200723 09:59:37.534" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:39.567" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:41.600" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:43.618" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:45.638" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:47.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200723 09:59:49.169" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200723 09:59:47.169" endtime="20200723 09:59:49.169"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200723 09:59:49.169" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x00000216BF487310&gt;</msg>
<status status="PASS" starttime="20200723 09:59:49.169" endtime="20200723 09:59:49.169"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Userid:</arg>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:49.169" endtime="20200723 09:59:49.388"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:49.388" endtime="20200723 09:59:49.388"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Password:</arg>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:49.388" endtime="20200723 09:59:49.825"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200723 09:59:49.825" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200723 09:59:49.825" endtime="20200723 09:59:49.825"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>12</arg>
<arg>25</arg>
<arg>P A Y M E N T \ \ S E R V I C E S \ \ F O R \ \ E U R O P E</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:49.825" endtime="20200723 09:59:49.825"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 09:59:49.825" endtime="20200723 09:59:50.265"></status>
</kw>
<kw name="Wait For Field" library="py3270lib">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.
Sometimes the server will "unlock" the keyboard but the screen will
not yet be ready.  In that case, an attempt to read or write to the
screen will result in a 'E' keyboard status because we tried to
read from a screen that is not yet ready.
Using this method tells the client to wait until a field is
detected and the cursor has been positioned on it.</doc>
<status status="PASS" starttime="20200723 09:59:50.265" endtime="20200723 09:59:50.265"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200723 09:59:50.265" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; MENU TUBES PER    EQTAUT5                &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; Panelid  - MIOMENU 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; TII4012I Signon complete for EQTAUT5 IP address 192.168.50.130 PORT 54051      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                             Terminal - TCPBDMQ7
 Menu=PF23         Jump=PF24         Help=PF1                Model    - 3278-4E 
 Fwd=PF8           Bwd=PF7                                   System   - PRDB    
                                                                                
    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Sessid&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Sesskey&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Descrizione Sessione&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Stato&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;              
                                                                                
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; S5TSO       PF          EGKT------TSO ON DEV                               
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; TST         PF          TSO - TST1                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SART        PF          SAR - TST1                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SAREGKT     PF          SAR - EGKT                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK0A        PF          EGKT - NEW CICS A progetto SAAN                    
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK23A       PF          EGKT-CICSK23-COL1(CAMS) A                          
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK23B       PF          EGKT-CICSK23-COL1(CAMS) B                          
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK25        PF          EGKT------QUALITY ASSURANCE                        
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK0B        PF          EGKT - NEW CICS B progetto SAAN                    
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; GROT        PF          GEN. RES. BLT/? TOR SAANA EGKT                     
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK35        PF          EGKT-CICSK35-(TEST RLSE)                           
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Comando ===&amp;gt;&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200723 09:59:50.265" endtime="20200723 09:59:50.265"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:36.518" endtime="20200723 09:59:50.265"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywordsSAN">
<doc>Logs out of TSO session using *S5TSO* `Sessid`</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:50.265" endtime="20200723 09:59:50.265"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200723 09:59:50.265" endtime="20200723 09:59:50.280"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:50.280" endtime="20200723 09:59:52.905"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 09:59:52.905" endtime="20200723 09:59:53.327"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200723 09:59:53.655" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200723 09:59:53.327" endtime="20200723 09:59:53.765"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:53.765" endtime="20200723 09:59:53.765"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 09:59:53.765" endtime="20200723 09:59:54.187"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 09:59:55.187" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 09:59:54.187" endtime="20200723 09:59:55.187"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:50.265" endtime="20200723 09:59:55.187"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywordsSAN">
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:55.187" endtime="20200723 09:59:55.187"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200723 09:59:55.187" endtime="20200723 09:59:55.187"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:55.187" endtime="20200723 09:59:57.814"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 09:59:57.814" endtime="20200723 09:59:58.236"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200723 09:59:58.564" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200723 09:59:58.236" endtime="20200723 09:59:58.673"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200723 09:59:58.673" endtime="20200723 09:59:58.673"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 09:59:58.673" endtime="20200723 09:59:59.095"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 10:00:00.095" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 09:59:59.095" endtime="20200723 10:00:00.095"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:55.187" endtime="20200723 10:00:00.095"></status>
</kw>
<kw name="Set UDFL" library="SharedKeywordsSAN">
<kw name="Go to CICSK updated" library="SharedKeywordsSAN">
<doc>Goes into cicks, handles logging in, uses keyword 'Log into CICKS'</doc>
<kw name="Select menu Option" library="SharedKeywordsSAN">
<doc>Selects given *${Option}* from main menu screen.</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:00.095" endtime="20200723 10:00:00.095"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:00.095" endtime="20200723 10:00:00.095"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:00.095" endtime="20200723 10:00:02.720"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:02.720" endtime="20200723 10:00:03.142"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200723 10:00:03.470" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200723 10:00:03.142" endtime="20200723 10:00:03.580"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:03.580" endtime="20200723 10:00:03.580"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:03.580" endtime="20200723 10:00:04.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200723 10:00:06.017" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200723 10:00:04.017" endtime="20200723 10:00:06.017"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200723 10:00:06.017" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200723 10:00:06.017" endtime="20200723 10:00:06.017"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:00.095" endtime="20200723 10:00:06.017"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200723 10:00:06.017" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x00000216BF487A30&gt;</msg>
<status status="PASS" starttime="20200723 10:00:06.017" endtime="20200723 10:00:06.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 10:00:07.033" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 10:00:06.017" endtime="20200723 10:00:07.033"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>1</arg>
<arg>31</arg>
<arg>12</arg>
</arguments>
<assign>
<var>${SingON}</var>
</assign>
<msg timestamp="20200723 10:00:07.033" level="INFO">${SingON} =             </msg>
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.033"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${SingON}</arg>
</arguments>
<msg timestamp="20200723 10:00:07.033" level="INFO">${SingON} =             </msg>
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SingON}' != 'CICS Sign On'</arg>
<arg>send clear</arg>
<arg>ELSE</arg>
<arg>Log into CICKS</arg>
</arguments>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.033"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.033"></status>
</kw>
<kw name="XCSR" library="SharedKeywordsSAN">
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.033"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.033"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.451"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:07.033" endtime="20200723 10:00:07.451"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>1</arg>
<arg>MAIN MENU</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:07.451" endtime="20200723 10:00:07.451"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:00.095" endtime="20200723 10:00:07.451"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:07.451" endtime="20200723 10:00:07.451"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>UDFL</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:07.451" endtime="20200723 10:00:07.451"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:07.451" endtime="20200723 10:00:07.873"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Company Number =====&gt;</arg>
<arg>&amp;{environment}[companynumber]</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:07.873" endtime="20200723 10:00:08.529"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>DB2 Test Pool ID ===&gt;</arg>
<arg>&amp;{environment}[pool]</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:08.529" endtime="20200723 10:00:10.279"></status>
</kw>
<kw name="Send Pf4" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:10.279" endtime="20200723 10:00:10.279"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>2</arg>
<arg>2</arg>
<arg>User defaults updated, new copy performed</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:10.279" endtime="20200723 10:00:10.279"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywordsSAN">
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:10.279" endtime="20200723 10:00:10.295"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 10:00:11.295" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 10:00:10.295" endtime="20200723 10:00:11.295"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:10.279" endtime="20200723 10:00:11.295"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywordsSAN">
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:11.295" endtime="20200723 10:00:11.295"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:11.295" endtime="20200723 10:00:11.295"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:11.295" endtime="20200723 10:00:13.920"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:13.920" endtime="20200723 10:00:14.343"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200723 10:00:14.672" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200723 10:00:14.343" endtime="20200723 10:00:14.781"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:14.781" endtime="20200723 10:00:14.781"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:14.781" endtime="20200723 10:00:15.203"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 10:00:16.212" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 10:00:15.203" endtime="20200723 10:00:16.212"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:11.295" endtime="20200723 10:00:16.212"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:00.095" endtime="20200723 10:00:16.212"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:36.503" endtime="20200723 10:00:16.212"></status>
</kw>
<kw name="Log in to TSO" library="SharedKeywordsSAN">
<kw name="Select menu Option" library="SharedKeywordsSAN">
<doc>Selects given *${Option}* from main menu screen.</doc>
<arguments>
<arg>S5TSO</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:16.212" endtime="20200723 10:00:16.212"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:16.212" endtime="20200723 10:00:16.212"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:16.212" endtime="20200723 10:00:18.839"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:18.839" endtime="20200723 10:00:19.261"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200723 10:00:19.589" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200723 10:00:19.261" endtime="20200723 10:00:19.698"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:19.698" endtime="20200723 10:00:19.698"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:19.698" endtime="20200723 10:00:20.136"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200723 10:00:22.136" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200723 10:00:20.136" endtime="20200723 10:00:22.136"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200723 10:00:22.136" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; IKJ56700A ENTER USERID -&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                       
&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200723 10:00:22.136" endtime="20200723 10:00:22.136"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:16.212" endtime="20200723 10:00:22.136"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200723 10:00:22.136" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x00000216BF468460&gt;</msg>
<status status="PASS" starttime="20200723 10:00:22.136" endtime="20200723 10:00:22.136"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:22.136" endtime="20200723 10:00:22.136"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:22.136" endtime="20200723 10:00:22.558"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:22.558" endtime="20200723 10:00:22.558"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:22.558" endtime="20200723 10:00:22.558"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200723 10:00:22.558" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200723 10:00:22.558" endtime="20200723 10:00:22.558"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:22.558" endtime="20200723 10:00:23.276"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>ispf</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:23.276" endtime="20200723 10:00:23.276"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:23.276" endtime="20200723 10:00:23.995"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>ISPF Primary Option Menu</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:23.995" endtime="20200723 10:00:23.995"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:16.212" endtime="20200723 10:00:23.995"></status>
</kw>
<kw name="Load table 158T">
<arguments>
<arg>ICPS.ITST.TAUT.CMBPRI.TEST13</arg>
</arguments>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>TWS</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:23.995" endtime="20200723 10:00:23.995"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:23.995" endtime="20200723 10:00:24.480"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>5.1</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:24.480" endtime="20200723 10:00:24.480"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:24.480" endtime="20200723 10:00:24.980"></status>
</kw>
<kw name="Execute Command" library="py3270lib">
<doc>Executes the given command in the terminal and returns the status.  Available commands are listed here:
http://x3270.bgp.nu/ws3270-man.html#Actions
and here:
http://x3270.bgp.nu/wc3270-script.html#Script-Specific-Actions</doc>
<arguments>
<arg>EraseEOF</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:24.980" endtime="20200723 10:00:25.089"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>TESTJOBESTEMPOR</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:25.089" endtime="20200723 10:00:25.089"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:25.089" endtime="20200723 10:00:25.543"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:25.543" endtime="20200723 10:00:25.965"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:25.965" endtime="20200723 10:00:26.387"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:26.387" endtime="20200723 10:00:26.809"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>18</arg>
<arg>26</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20200723 10:00:26.809" level="INFO">${a} = 10.00</msg>
<status status="PASS" starttime="20200723 10:00:26.809" endtime="20200723 10:00:26.809"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${a}</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:26.809" endtime="20200723 10:00:26.809"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200723 10:00:26.809" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EGKT&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; ------------- ADDING AN APPLICATION TO THE CURRE     &lt;/span&gt;&lt;span style="color:yellow;background:black;font-weight:bold;font-style:normal"&gt; DEADLINE INCOMPLETE&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                                                                  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; Enter the&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; DEP&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; command above to verify automatic dependency resolution, or,     
 enter the&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; OPER&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; command to modify operations.                                   
                                                                                
 Application           :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; TESTJOBESTEMPOR &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; prova                                 
 Owner                 :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; EQSIST          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                       
 Operations            :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 2  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                    
 External predecessors :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                   
                                                                                
&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Dependency resolution options:  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                               
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; AUTOMATIC DEP      ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; Y&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           Automatic resolution of Conditional        
                                     and External dependencies:  Y P S or N     
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; RESOLVE REQUIRED   ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; Y&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           Auto deps must be resolved:  Y or N        
&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Input arrival:    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Deadline:         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                         
 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; DATE              ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 20/07/23&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; DATE   ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 20/07/23&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (format&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; YY/MM/DD&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; )    
 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; TIME              ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 10.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; TIME   ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 10.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  (format&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; HH.MM&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    )    
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; VARIABLE TABLE     ===&amp;gt;&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; JCL variable table to be used         
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; GROUP DEFINITION   ===&amp;gt;&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                       
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRIORITY           ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           1-9                                        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; ERROR CODE         ===&amp;gt;&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;        If this is a rerun                         
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200723 10:00:26.809" endtime="20200723 10:00:26.809"></status>
</kw>
<kw name="Send command" library="Setup_Keywords">
<arguments>
<arg>oper</arg>
</arguments>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Command ===&gt;</arg>
<arg>${Command}</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:26.809" endtime="20200723 10:00:27.028"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:27.028" endtime="20200723 10:00:27.465"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:26.809" endtime="20200723 10:00:27.465"></status>
</kw>
<kw name="Execute Command" library="py3270lib">
<doc>Executes the given command in the terminal and returns the status.  Available commands are listed here:
http://x3270.bgp.nu/ws3270-man.html#Actions
and here:
http://x3270.bgp.nu/wc3270-script.html#Script-Specific-Actions</doc>
<arguments>
<arg>Newline</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:27.465" endtime="20200723 10:00:27.575"></status>
</kw>
<kw name="Execute Command" library="py3270lib">
<doc>Executes the given command in the terminal and returns the status.  Available commands are listed here:
http://x3270.bgp.nu/ws3270-man.html#Actions
and here:
http://x3270.bgp.nu/wc3270-script.html#Script-Specific-Actions</doc>
<arguments>
<arg>Newline</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:27.575" endtime="20200723 10:00:27.684"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>J</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:27.684" endtime="20200723 10:00:27.684"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:27.684" endtime="20200723 10:00:27.684"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:27.684" endtime="20200723 10:00:27.684"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:27.684" endtime="20200723 10:00:27.684"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:27.684" endtime="20200723 10:00:27.684"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>TSTAUTO1</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:27.684" endtime="20200723 10:00:27.684"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200723 10:00:27.700" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EGKT&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; ------------- MODIFYING OPERATIONS IN THE CURRENT PLAN -- Row 1 to 2 of 2 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                                                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; Scroll ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; Enter the&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; GRAPH&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; command above to view operations graphically or                
 change data in the rows, and/or enter any of the following row commands:       
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; I(nn)&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Insert,&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; R(nn),RR(nn)&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Repeat, &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; D(nn),DD&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Delete                      
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; J&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Edit JCL,&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; O&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Browse operator instructions,&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; S&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Modify operation details   
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; L&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Browse joblog,&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; LJ&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; - Browse joblog via ITOM                                 
                                                                                
 Application           :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; TESTJOBESTEMPOR &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; prova                                 
 Owner                 :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; EQSIST          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                       
 Input arrival         :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 20/07/23  10.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                        
 Status                :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; Being added                                            
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Row&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Operation                        &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Jobname &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;PS&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Duration&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Opt&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Dep&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Res    &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Stat
&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;cmd&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;ws  &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;no.&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;text                    &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;        &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;HH.MM.SS&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;S&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;T&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;S/P&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;S&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;R1&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;R2&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;N&lt;/span&gt;&lt;span style="color:black;background:deepSkyBlue;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;Cu
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ''' CPU1 001&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ________________________ APPLGO__&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;  1 00.00.01 Y Y&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;  0  0&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; A 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; J'' CPU1 020&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ________________________ TSTAUTO1&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;1 00.00.12 Y N&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;  0  0&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; W 
 ******************************* Bottom of data ********************************
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200723 10:00:27.684" endtime="20200723 10:00:27.700"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:27.700" endtime="20200723 10:00:28.309"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>COPY 'TSTAUTO.JOBLIB(LOAD158A)'</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:28.309" endtime="20200723 10:00:28.309"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:28.309" endtime="20200723 10:00:28.747"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Command</arg>
<arg>C 'XX1' '${DSN}'</arg>
</arguments>
<status status="PASS" starttime="20200723 10:00:28.747" endtime="20200723 10:00:28.967"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:00:28.967" endtime="20200723 10:00:29.389"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200723 10:00:29.389" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EGKT&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; --------------- EDITING JCL FOR A COMPUTER OPERA      CHARS 'XX1' changed 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                                                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; Scroll ===&amp;gt;&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; CSR &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
 Edit JCL below and press&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; END&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; to finish or&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CANCEL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; to reject:                    
                                                                                
 Application           :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; TESTJOBESTEMPOR  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; prova                                
 Operation             :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CPU1 20 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                               
 Status of operation   :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; Waiting                &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
 Jobname               :&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; TSTAUTO1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          JCL last updated by:                 
                                                                                
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 000188 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CRDCOMBO.SUPP,DISP=SHR       
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 000189&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; //SORTIN    DD DSN=ICPS.ITST.TAUT.CMBPRI.TEST13&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt;,&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;DISP=SHR                
 000190 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CARDORDR.M2.SUPP,DISP=SHR    
 000191 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.ACCTMOD,DISP=SHR             
 000192 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.DEVBLK.M2,DISP=SHR           
 000193 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CUSTMOD.M2,DISP=SHR          
 000194 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CARDMOD.M2,DISP=SHR          
 000195 //*ORTIN    DD DSN=XTRN852.IC1UL158.CARDMOD.M2.SPNDD,DISP=SHR           
 000196 //*ORTIN    DD DSN=XTRN852.IC1UL158.CARDMOD.M2.VUOTO,DISP=SHR           
 000197 //*ORTIN    DD DSN=XTRN852.IC1UL158.M2.CARDMOD.T4619,DISP=SHR           
 000198 //*                                                                     
 000199 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CARDORDR.M1,DISP=SHR         
 000200 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CARDORDR.HCE,DISP=SHR        
 000201 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.DEVBLK.M1,DISP=SHR           
 000202 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CARDMOD.M1,DISP=SHR          
 000203 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CARDREI.M1,DISP=SHR          
 000204 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CARDREIM.M1,DISP=SHR         
 000205 //*ORTIN    DD DSN=&amp;amp;NVSM..IC&amp;amp;ICPSSYS.UL158.CUSTMOD.M1,DISP=SHR          
 000206 //SORTOUT   DD DSN=&amp;amp;CARDORDR,                                           
 000207 //             DISP=(,PASS),                                            
 000208 //             SPACE=(CYL,(1,5),RLSE),                                  
 000209 //             DCB=(*.SORTIN)                                           
 000210 //SYSOUT    DD SYSOUT=*                                                 
 000211 //SYSIN     DD *                                                        
 000212  SORT FIELDS=(1,27,CH,A,28,3,PD,A)                                      
 000213  SUM FIELDS=NONE                                                        
 000214 //*                                                                     
 000215 //********************************************************************* 
 000216 //*   PS010: DB2 UTIL LOAD OF CUSTOMER WORKING TABLE IC158T *         * 
 000217 //*                                                                   * 
 000218 //********************************************************************* 
 000219 //PS010   EXEC PGM=DSNUTILB,PARM='&amp;amp;DB2SYS'                              
 000220 //STEPLIB   DD DSN=&amp;amp;DB2LOAD,DISP=SHR                                    
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200723 10:00:29.389" endtime="20200723 10:00:29.389"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:29.389" endtime="20200723 10:00:29.452"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:29.452" endtime="20200723 10:00:29.765"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200723 10:00:29.765" endtime="20200723 10:00:30.265"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60 seconds</arg>
</arguments>
<msg timestamp="20200723 10:01:30.275" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20200723 10:00:30.265" endtime="20200723 10:01:30.275"></status>
</kw>
<kw name="Send command" library="Setup_Keywords">
<arguments>
<arg>=X</arg>
</arguments>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Command ===&gt;</arg>
<arg>${Command}</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:30.275" endtime="20200723 10:01:30.494"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:01:30.494" endtime="20200723 10:01:31.040"></status>
</kw>
<status status="PASS" starttime="20200723 10:01:30.275" endtime="20200723 10:01:31.040"></status>
</kw>
<status status="PASS" starttime="20200723 10:00:23.995" endtime="20200723 10:01:31.040"></status>
</kw>
<kw name="Test teardown" library="Set_Teardown" type="teardown">
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywordsSAN">
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200723 10:01:31.040" endtime="20200723 10:01:31.040"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 10:01:32.040" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 10:01:31.040" endtime="20200723 10:01:32.040"></status>
</kw>
<status status="PASS" starttime="20200723 10:01:31.040" endtime="20200723 10:01:32.040"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywordsSAN">
<doc>Logs out of TSO session using *S5TSO* `Sessid`</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:32.040" endtime="20200723 10:01:32.040"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200723 10:01:32.040" endtime="20200723 10:01:32.040"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:32.040" endtime="20200723 10:01:34.667"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:01:34.667" endtime="20200723 10:01:35.089"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200723 10:01:35.417" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200723 10:01:35.089" endtime="20200723 10:01:35.527"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:35.527" endtime="20200723 10:01:35.527"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:01:35.527" endtime="20200723 10:01:35.948"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 10:01:36.949" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 10:01:35.948" endtime="20200723 10:01:36.949"></status>
</kw>
<status status="PASS" starttime="20200723 10:01:32.040" endtime="20200723 10:01:36.949"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywordsSAN">
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:36.949" endtime="20200723 10:01:36.949"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200723 10:01:36.949" endtime="20200723 10:01:36.949"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:36.949" endtime="20200723 10:01:39.574"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:01:39.574" endtime="20200723 10:01:39.995"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200723 10:01:40.324" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200723 10:01:39.995" endtime="20200723 10:01:40.433"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:40.433" endtime="20200723 10:01:40.433"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:01:40.433" endtime="20200723 10:01:40.855"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200723 10:01:41.855" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200723 10:01:40.855" endtime="20200723 10:01:41.855"></status>
</kw>
<status status="PASS" starttime="20200723 10:01:36.949" endtime="20200723 10:01:41.855"></status>
</kw>
<kw name="Log out of mainframe" library="SharedKeywordsSAN">
<doc>Logs out of mainframe.</doc>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>logoff</arg>
</arguments>
<status status="PASS" starttime="20200723 10:01:41.855" endtime="20200723 10:01:42.292"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200723 10:01:42.292" endtime="20200723 10:01:42.714"></status>
</kw>
<status status="PASS" starttime="20200723 10:01:41.855" endtime="20200723 10:01:42.714"></status>
</kw>
<status status="PASS" starttime="20200723 10:01:31.040" endtime="20200723 10:01:42.714"></status>
</kw>
<status status="PASS" starttime="20200723 09:59:36.503" endtime="20200723 10:01:42.714" critical="yes"></status>
</test>
<status status="PASS" starttime="20200723 09:59:35.956" endtime="20200723 10:01:42.714"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Setup Prebatch">Setup Prebatch</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200723 09:59:36.393" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\comboPrimary\setup_prebatch.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200723 09:59:36.409" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\comboPrimary\setup_prebatch.robot': Importing test library 'excelLibrary' failed: ModuleNotFoundError: No module named 'excelLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200723 09:59:36.424" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\SharedKeywordsSAN.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200723 09:59:36.440" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\Environments1.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200723 09:59:36.471" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\comboPrimary\Setup_Keywords.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200723 09:59:36.471" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\comboPrimary\Setup_Keywords.robot': Test library '...\CsvSaveAndRetrievePlastic1.py' does not exist.</msg>
<msg timestamp="20200723 09:59:36.471" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\comboPrimary\Setup_Keywords.robot': Resource file 'SharedKeywordsSAN.robot' does not exist.</msg>
<msg timestamp="20200723 09:59:36.503" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\comboPrimary\setup_prebatch.robot': Setting variable '${hetu}' failed: Variable '${date}' not found.</msg>
<msg timestamp="20200723 09:59:37.534" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:39.567" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:41.600" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:43.618" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200723 09:59:45.638" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
</errors>
</robot>
