<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.8.1 on win32)" generated="20200708 09:34:50.612" rpa="false">
<suite id="s1" name="Vd Prebatch" source="C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot">
<test id="s1-t1" name="setupVD">
<kw name="Test setup" library="Set_Teardown" type="setup">
<arguments>
<arg>${environment name}</arg>
</arguments>
<kw name="Set environment2" library="Environments1">
<arguments>
<arg>${environment name}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>&amp;{environment}</arg>
<arg>owner=</arg>
<arg>appprefix=</arg>
<arg>jobprefix=</arg>
<arg>datasetprefix=</arg>
<arg>cicsk=</arg>
<arg>companynumber=</arg>
<arg>pool=</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='RLSES'</arg>
<arg>Set RLSES</arg>
</arguments>
<kw name="Set RLSES" library="Environments1">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>owner=RLSES</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.113"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>appprefix=SAN</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.113"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>jobprefix=SAN</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.113"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>datasetprefix=OPBK.rlse.icr</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.113"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>cicsk=CK35</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.113"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>companynumber=20000</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.113"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>pool=01</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.128" endtime="20200708 09:34:51.128"></status>
</kw>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.128"></status>
</kw>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='CK0A'</arg>
<arg>Set CK0A</arg>
</arguments>
<status status="PASS" starttime="20200708 09:34:51.128" endtime="20200708 09:34:51.128"></status>
</kw>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:34:51.128"></status>
</kw>
<kw name="Connect to mainframe" library="SharedKeywordsSAN">
<kw name="Connect" library="py3270lib">
<doc>Connect to a host</doc>
<arguments>
<arg>Y:192.168.14.6:2399</arg>
</arguments>
<msg timestamp="20200708 09:34:52.159" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:34:54.191" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:34:56.222" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:34:58.254" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:35:00.292" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="PASS" starttime="20200708 09:34:51.128" endtime="20200708 09:35:01.808"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200708 09:35:03.808" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200708 09:35:01.808" endtime="20200708 09:35:03.808"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200708 09:35:03.808" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x000001E641F5AF70&gt;</msg>
<status status="PASS" starttime="20200708 09:35:03.808" endtime="20200708 09:35:03.808"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Userid:</arg>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:03.808" endtime="20200708 09:35:04.027"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:04.027" endtime="20200708 09:35:04.027"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Password:</arg>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:04.027" endtime="20200708 09:35:04.464"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200708 09:35:04.464" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200708 09:35:04.464" endtime="20200708 09:35:04.464"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>12</arg>
<arg>25</arg>
<arg>P A Y M E N T \ \ S E R V I C E S \ \ F O R \ \ E U R O P E</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:04.464" endtime="20200708 09:35:04.464"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:04.464" endtime="20200708 09:35:04.902"></status>
</kw>
<kw name="Wait For Field" library="py3270lib">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.
Sometimes the server will "unlock" the keyboard but the screen will
not yet be ready.  In that case, an attempt to read or write to the
screen will result in a 'E' keyboard status because we tried to
read from a screen that is not yet ready.
Using this method tells the client to wait until a field is
detected and the cursor has been positioned on it.</doc>
<status status="PASS" starttime="20200708 09:35:04.902" endtime="20200708 09:35:04.902"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:35:04.902" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; MENU TUBES PER    EQTAUT5                &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; Panelid  - MIOMENU 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; TII4012I Signon complete for EQTAUT5 IP address 192.168.50.130 PORT 53646      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                             Terminal - TCPBDMWX
 Menu=PF23         Jump=PF24         Help=PF1                Model    - 3278-4E 
 Fwd=PF8           Bwd=PF7                                   System   - PRDB    
                                                                                
    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Sessid&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Sesskey&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Descrizione Sessione&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Stato&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;              
                                                                                
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; S5TSO       PF          EGKT------TSO ON DEV                               
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; TST         PF          TSO - TST1                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SART        PF          SAR - TST1                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SAREGKT     PF          SAR - EGKT                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK0A        PF          EGKT - NEW CICS A progetto SAAN                    
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK23A       PF          EGKT-CICSK23-COL1(CAMS) A                          
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK23B       PF          EGKT-CICSK23-COL1(CAMS) B                          
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK25        PF          EGKT------QUALITY ASSURANCE                        
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK0B        PF          EGKT - NEW CICS B progetto SAAN                    
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; GROT        PF          GEN. RES. BLT/? TOR SAANA EGKT                     
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK35        PF          EGKT-CICSK35-(TEST RLSE)                           
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Comando ===&amp;gt;&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:35:04.902" endtime="20200708 09:35:04.902"></status>
</kw>
<status status="PASS" starttime="20200708 09:34:51.128" endtime="20200708 09:35:04.902"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywordsSAN">
<doc>Logs out of TSO session using *S5TSO* `Sessid`</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:04.902" endtime="20200708 09:35:04.902"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:04.902" endtime="20200708 09:35:04.918"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:04.918" endtime="20200708 09:35:07.543"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:07.543" endtime="20200708 09:35:07.965"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:35:08.293" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:35:07.965" endtime="20200708 09:35:08.402"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:08.402" endtime="20200708 09:35:08.402"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:08.402" endtime="20200708 09:35:08.824"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:09.824" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:08.824" endtime="20200708 09:35:09.824"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:04.902" endtime="20200708 09:35:09.824"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywordsSAN">
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:09.824" endtime="20200708 09:35:09.824"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:09.824" endtime="20200708 09:35:09.824"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:09.824" endtime="20200708 09:35:12.449"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:12.449" endtime="20200708 09:35:12.871"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:35:13.199" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:35:12.871" endtime="20200708 09:35:13.309"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:13.309" endtime="20200708 09:35:13.309"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:13.309" endtime="20200708 09:35:13.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:14.733" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:13.731" endtime="20200708 09:35:14.733"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:09.824" endtime="20200708 09:35:14.733"></status>
</kw>
<kw name="Set UDFL" library="SharedKeywordsSAN">
<kw name="Go to CICSK updated" library="SharedKeywordsSAN">
<doc>Goes into cicks, handles logging in, uses keyword 'Log into CICKS'</doc>
<kw name="Select menu Option" library="SharedKeywordsSAN">
<doc>Selects given *${Option}* from main menu screen.</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:14.733" endtime="20200708 09:35:14.733"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:14.733" endtime="20200708 09:35:14.733"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:14.733" endtime="20200708 09:35:17.358"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:17.358" endtime="20200708 09:35:17.780"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:35:18.108" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:35:17.780" endtime="20200708 09:35:18.218"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:18.218" endtime="20200708 09:35:18.218"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:18.218" endtime="20200708 09:35:18.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200708 09:35:20.657" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200708 09:35:18.655" endtime="20200708 09:35:20.657"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:35:20.657" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:35:20.657" endtime="20200708 09:35:20.657"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:14.733" endtime="20200708 09:35:20.657"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200708 09:35:20.657" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x000001E641F5AD30&gt;</msg>
<status status="PASS" starttime="20200708 09:35:20.657" endtime="20200708 09:35:20.657"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:21.657" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:20.657" endtime="20200708 09:35:21.657"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>1</arg>
<arg>31</arg>
<arg>12</arg>
</arguments>
<assign>
<var>${SingON}</var>
</assign>
<msg timestamp="20200708 09:35:21.657" level="INFO">${SingON} =             </msg>
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:21.657"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${SingON}</arg>
</arguments>
<msg timestamp="20200708 09:35:21.657" level="INFO">${SingON} =             </msg>
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:21.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SingON}' != 'CICS Sign On'</arg>
<arg>send clear</arg>
<arg>ELSE</arg>
<arg>Log into CICKS</arg>
</arguments>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:21.657"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:21.657"></status>
</kw>
<kw name="XCSR" library="SharedKeywordsSAN">
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:21.657"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:21.657"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:22.079"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:21.657" endtime="20200708 09:35:22.079"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>1</arg>
<arg>MAIN MENU</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:22.079" endtime="20200708 09:35:22.079"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:14.733" endtime="20200708 09:35:22.079"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:22.079" endtime="20200708 09:35:22.079"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>UDFL</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:22.079" endtime="20200708 09:35:22.079"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:22.079" endtime="20200708 09:35:22.501"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Company Number =====&gt;</arg>
<arg>&amp;{environment}[companynumber]</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:22.501" endtime="20200708 09:35:23.157"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>DB2 Test Pool ID ===&gt;</arg>
<arg>&amp;{environment}[pool]</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:23.157" endtime="20200708 09:35:24.907"></status>
</kw>
<kw name="Send Pf4" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:24.907" endtime="20200708 09:35:24.907"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>2</arg>
<arg>2</arg>
<arg>User defaults updated, new copy performed</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:24.907" endtime="20200708 09:35:24.907"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywordsSAN">
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:24.907" endtime="20200708 09:35:24.923"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:25.923" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:24.923" endtime="20200708 09:35:25.923"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:24.907" endtime="20200708 09:35:25.923"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywordsSAN">
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:25.923" endtime="20200708 09:35:25.923"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:25.923" endtime="20200708 09:35:25.923"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:25.923" endtime="20200708 09:35:28.548"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:28.548" endtime="20200708 09:35:28.970"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:35:29.298" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:35:28.970" endtime="20200708 09:35:29.407"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:29.407" endtime="20200708 09:35:29.407"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:29.407" endtime="20200708 09:35:29.829"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:30.829" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:29.829" endtime="20200708 09:35:30.829"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:25.923" endtime="20200708 09:35:30.829"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:14.733" endtime="20200708 09:35:30.829"></status>
</kw>
<status status="PASS" starttime="20200708 09:34:51.113" endtime="20200708 09:35:30.829"></status>
</kw>
<kw name="Log in to TSO" library="SharedKeywordsSAN">
<kw name="Select menu Option" library="SharedKeywordsSAN">
<doc>Selects given *${Option}* from main menu screen.</doc>
<arguments>
<arg>S5TSO</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:30.829" endtime="20200708 09:35:30.829"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:30.829" endtime="20200708 09:35:30.829"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:30.829" endtime="20200708 09:35:33.454"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:33.454" endtime="20200708 09:35:33.876"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:35:34.204" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:35:33.876" endtime="20200708 09:35:34.314"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:34.314" endtime="20200708 09:35:34.314"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:34.314" endtime="20200708 09:35:34.767"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200708 09:35:36.767" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200708 09:35:34.767" endtime="20200708 09:35:36.767"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:35:36.767" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; IKJ56700A ENTER USERID -&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                       
&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:35:36.767" endtime="20200708 09:35:36.767"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:30.829" endtime="20200708 09:35:36.767"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200708 09:35:36.767" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x000001E641F38E50&gt;</msg>
<status status="PASS" starttime="20200708 09:35:36.767" endtime="20200708 09:35:36.767"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:36.767" endtime="20200708 09:35:36.767"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:36.767" endtime="20200708 09:35:37.204"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:37.204" endtime="20200708 09:35:37.204"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:37.204" endtime="20200708 09:35:37.204"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200708 09:35:37.204" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200708 09:35:37.204" endtime="20200708 09:35:37.204"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:37.204" endtime="20200708 09:35:37.970"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>ispf</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:37.970" endtime="20200708 09:35:37.970"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:37.970" endtime="20200708 09:35:39.208"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>ISPF Primary Option Menu</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:39.208" endtime="20200708 09:35:39.208"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:30.829" endtime="20200708 09:35:39.208"></status>
</kw>
<kw name="verify ic158t" library="Setup_vd_Keywords">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>r</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:39.208" endtime="20200708 09:35:39.208"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:39.208" endtime="20200708 09:35:39.754"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:39.754" endtime="20200708 09:35:39.754"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:39.754" endtime="20200708 09:35:41.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}' == 'CK0A'</arg>
<arg>Fill field</arg>
<arg>16</arg>
<arg>68</arg>
<arg>DB25</arg>
<arg>ELSE</arg>
<arg>Fill field</arg>
<arg>16</arg>
<arg>68</arg>
<arg>db3</arg>
</arguments>
<kw name="Fill Field" library="py3270lib">
<doc>Accepts the Y position (rows from top) and X position (columns from left) as well as some
text to send.  The field is first cleared, then the given text is entered from that location.</doc>
<arguments>
<arg>16</arg>
<arg>68</arg>
<arg>db3</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:41.270" endtime="20200708 09:35:41.270"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:41.270" endtime="20200708 09:35:41.270"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:41.270" endtime="20200708 09:35:41.708"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:41.708" endtime="20200708 09:35:41.708"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:41.708" endtime="20200708 09:35:42.208"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:42.208" endtime="20200708 09:35:42.208"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:42.208" endtime="20200708 09:35:42.770"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:43.770" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:42.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>25</arg>
<arg>Enter, Execute and Explain SQL</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="Send query" library="SharedKeywordsSAN">
<arguments>
<arg>SELECT EXTRL_REQ_KEY, PROC_RESULT,PROC_ERROR_TYPE</arg>
<arg>FROM</arg>
<arg>&amp;{environment}[owner].IC158T WHERE</arg>
<arg>EXTRL_REQ_KEY='${RequestID}'</arg>
</arguments>
<kw name="${line} IN [ @{Input query} ]" type="for">
<kw name="${line} = SELECT EXTRL_REQ_KEY, PROC_RESULT,PROC_ERROR_TYPE" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="${line} = FROM" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="${line} = RLSES.IC158T WHERE" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="${line} = EXTRL_REQ_KEY='EQ70006VD2020-07-08_09.10.00.1'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.770"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.786"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.786"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.786"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:43.770" endtime="20200708 09:35:43.786"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:43.786" endtime="20200708 09:35:44.255"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3</arg>
</arguments>
<msg timestamp="20200708 09:35:47.255" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200708 09:35:44.255" endtime="20200708 09:35:47.255"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>72</arg>
<arg>Top of 1</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:47.255" endtime="20200708 09:35:47.255"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>39</arg>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:47.255" endtime="20200708 09:35:47.255"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>51</arg>
<arg>P</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:47.255" endtime="20200708 09:35:47.255"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:35:47.255" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                 Top of 1&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 1 row - End of Object.                                            &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 EXTRL_REQ_KEY                        PROC_RESULT PROC_ERROR_TYPE               
 #4                                   #16         #17                           
 CHARACTER(36)                        CH(1)       CHARACTER(1)                  
 &amp;lt;-N-+----1----+----2----+----3----+&amp;gt; - N         -                             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; EQ70006VD2020-07-08_09.10.00.1       S&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                             
 ****  End of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:35:47.255" endtime="20200708 09:35:47.255"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:47.255" endtime="20200708 09:35:47.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:48.302" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:47.302" endtime="20200708 09:35:48.302"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:48.302" endtime="20200708 09:35:48.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:49.458" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:48.458" endtime="20200708 09:35:49.458"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:49.458" endtime="20200708 09:35:49.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:50.458" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:49.458" endtime="20200708 09:35:50.458"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:50.458" endtime="20200708 09:35:50.567"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:51.568" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:50.567" endtime="20200708 09:35:51.568"></status>
</kw>
<kw name="Send Pf3" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:51.568" endtime="20200708 09:35:51.630"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:35:51.646" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Menu  Utilities  Compilers  Options  Status  Help&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                            
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 
 EGKT&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ISPF Primary Option Menu&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                            
 Option ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                                                 &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
                                           &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;            &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;                        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 0 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Settings     &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Terminal and user parameters            User ID . :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; EQTAUT5 &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 1 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; View         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Display source data or listings         Time. . . :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; 09:35   &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 2 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Edit         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Create or change source data            Terminal. :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; 3278    &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 3 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Utilities    &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Perform utility functions               Screen. . :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; 1       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 4 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Foreground   &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Interactive language processing         Language. :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; ENGLISH &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 5 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Batch        &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Submit job for language processing      Appl ID . :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; ISR     &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 6 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Command      &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Enter TSO or Workstation commands       TSO logon :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; LOGISPF &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 7 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Dialog Test  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Perform dialog testing                  TSO prefix:&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 9 &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; IBM Products &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; IBM program development products       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; System ID : EGKT    &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 10&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; SCLM         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SW Configuration Library Manager       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; MVS acct. : THXXTXXE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; 11&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Workplace    &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ISPF Object/Action Workplace           &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Release . : ISPF 7.4&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;  
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EI&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; EI           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Enterprise Interface                   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                    
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; S &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Standard     &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; GSD standard selection panel                                  
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; R &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Local        &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SDC local selection menu                                      
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; P &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; PROJECT      &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Project selection panel                 DATE      :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 2020/07/08
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; U &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; USER         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; User selection panel                              :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 2020.190 &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; A &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; APPLICATION  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Invoke user selectable application                :&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; Wednesday&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
      Enter&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; X&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; to Terminate using log/list defaults                              
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:35:51.630" endtime="20200708 09:35:51.646"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>ISPF Primary Option Menu</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:51.646" endtime="20200708 09:35:51.646"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:39.208" endtime="20200708 09:35:51.646"></status>
</kw>
<kw name="verify ic159t" library="Setup_vd_Keywords">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>r</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:51.646" endtime="20200708 09:35:51.646"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:51.646" endtime="20200708 09:35:52.114"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:52.114" endtime="20200708 09:35:52.114"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:52.114" endtime="20200708 09:35:53.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}' == 'CK0A'</arg>
<arg>Fill field</arg>
<arg>16</arg>
<arg>68</arg>
<arg>DB25</arg>
<arg>ELSE</arg>
<arg>Fill field</arg>
<arg>16</arg>
<arg>68</arg>
<arg>db3</arg>
</arguments>
<kw name="Fill Field" library="py3270lib">
<doc>Accepts the Y position (rows from top) and X position (columns from left) as well as some
text to send.  The field is first cleared, then the given text is entered from that location.</doc>
<arguments>
<arg>16</arg>
<arg>68</arg>
<arg>db3</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:53.474" endtime="20200708 09:35:53.474"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:53.474" endtime="20200708 09:35:53.474"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:53.474" endtime="20200708 09:35:53.911"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:53.911" endtime="20200708 09:35:53.911"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:53.911" endtime="20200708 09:35:54.333"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:54.333" endtime="20200708 09:35:54.333"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:54.333" endtime="20200708 09:35:55.068"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:35:56.068" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:55.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>25</arg>
<arg>Enter, Execute and Explain SQL</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="Send query" library="SharedKeywordsSAN">
<arguments>
<arg>SELECT REQ_KEY_ID, RESP_STATUS, RESP_GEN_STATUS</arg>
<arg>FROM</arg>
<arg>&amp;{environment}[owner].IC159T WHERE</arg>
<arg>EXTRL_REQ_KEY='${RequestID}'</arg>
</arguments>
<kw name="${line} IN [ @{Input query} ]" type="for">
<kw name="${line} = SELECT REQ_KEY_ID, RESP_STATUS, RESP_GEN_STATUS" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="${line} = FROM" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="${line} = RLSES.IC159T WHERE" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.068"></status>
</kw>
<kw name="${line} = EXTRL_REQ_KEY='EQ70006VD2020-07-08_09.10.00.1'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.083"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:56.083" endtime="20200708 09:35:56.083"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.083"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.083"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:56.068" endtime="20200708 09:35:56.083"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:35:56.083" endtime="20200708 09:35:56.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3</arg>
</arguments>
<msg timestamp="20200708 09:35:59.602" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20200708 09:35:56.599" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>72</arg>
<arg>Top of 2</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${plastic}</var>
</assign>
<msg timestamp="20200708 09:35:59.602" level="INFO">${plastic} = 4920650105477922</msg>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${plastic}</arg>
</arguments>
<msg timestamp="20200708 09:35:59.602" level="INFO">${plastic} = 4920650105477922</msg>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>53</arg>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>12</arg>
<arg>53</arg>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>65</arg>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>12</arg>
<arg>65</arg>
<arg>R</arg>
</arguments>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.602"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:51.646" endtime="20200708 09:35:59.602"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywordsSAN">
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:35:59.617"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:00.617" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:35:59.617" endtime="20200708 09:36:00.617"></status>
</kw>
<status status="PASS" starttime="20200708 09:35:59.602" endtime="20200708 09:36:00.617"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywordsSAN">
<doc>Logs out of TSO session using *S5TSO* `Sessid`</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:00.617" endtime="20200708 09:36:00.617"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:00.617" endtime="20200708 09:36:00.617"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:00.617" endtime="20200708 09:36:03.245"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:03.245" endtime="20200708 09:36:03.667"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:36:03.995" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:36:03.667" endtime="20200708 09:36:04.105"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:04.105" endtime="20200708 09:36:04.105"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:04.105" endtime="20200708 09:36:04.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:05.527" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:36:04.527" endtime="20200708 09:36:05.527"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:00.617" endtime="20200708 09:36:05.527"></status>
</kw>
<kw name="Go to CICSK updated" library="SharedKeywordsSAN">
<doc>Goes into cicks, handles logging in, uses keyword 'Log into CICKS'</doc>
<kw name="Select menu Option" library="SharedKeywordsSAN">
<doc>Selects given *${Option}* from main menu screen.</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:05.527" endtime="20200708 09:36:05.527"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:05.527" endtime="20200708 09:36:05.527"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:05.527" endtime="20200708 09:36:08.152"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:08.152" endtime="20200708 09:36:08.570"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:36:08.898" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:36:08.570" endtime="20200708 09:36:09.007"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:09.007" endtime="20200708 09:36:09.007"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:09.007" endtime="20200708 09:36:09.445"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200708 09:36:11.445" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200708 09:36:09.445" endtime="20200708 09:36:11.445"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:36:11.445" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:36:11.445" endtime="20200708 09:36:11.445"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:05.527" endtime="20200708 09:36:11.445"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200708 09:36:11.445" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x000001E641F73E80&gt;</msg>
<status status="PASS" starttime="20200708 09:36:11.445" endtime="20200708 09:36:11.445"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:12.445" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:36:11.445" endtime="20200708 09:36:12.445"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>1</arg>
<arg>31</arg>
<arg>12</arg>
</arguments>
<assign>
<var>${SingON}</var>
</assign>
<msg timestamp="20200708 09:36:12.445" level="INFO">${SingON} =             </msg>
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.445"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${SingON}</arg>
</arguments>
<msg timestamp="20200708 09:36:12.445" level="INFO">${SingON} =             </msg>
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SingON}' != 'CICS Sign On'</arg>
<arg>send clear</arg>
<arg>ELSE</arg>
<arg>Log into CICKS</arg>
</arguments>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.445"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.445"></status>
</kw>
<kw name="XCSR" library="SharedKeywordsSAN">
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.445"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.445"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.867"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:12.445" endtime="20200708 09:36:12.867"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>1</arg>
<arg>MAIN MENU</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:12.867" endtime="20200708 09:36:12.867"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:05.527" endtime="20200708 09:36:12.867"></status>
</kw>
<kw name="Get environment date" library="Setup_vd_Keywords">
<doc>Sets the ${online_date} variable.</doc>
<arguments>
<arg>${company id}</arg>
</arguments>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:12.867" endtime="20200708 09:36:12.867"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>ucsc</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:12.867" endtime="20200708 09:36:12.867"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:12.867" endtime="20200708 09:36:13.289"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>iicf</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:13.289" endtime="20200708 09:36:13.289"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:13.289" endtime="20200708 09:36:13.711"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>COID</arg>
<arg>${company id}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:13.711" endtime="20200708 09:36:14.804"></status>
</kw>
<kw name="Send Pf6" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:14.804" endtime="20200708 09:36:14.804"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>8</arg>
<arg>47</arg>
</arguments>
<assign>
<var>${online_date}</var>
</assign>
<msg timestamp="20200708 09:36:14.804" level="INFO">${online_date} = 16/10/2018</msg>
<status status="PASS" starttime="20200708 09:36:14.804" endtime="20200708 09:36:14.804"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${online_date}</arg>
<arg>/</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${online_date}</var>
</assign>
<msg timestamp="20200708 09:36:14.804" level="INFO">${online_date} = 16.10.2018</msg>
<status status="PASS" starttime="20200708 09:36:14.804" endtime="20200708 09:36:14.804"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${online_date}</arg>
</arguments>
<msg timestamp="20200708 09:36:14.804" level="INFO">${online_date} = 16.10.2018</msg>
<status status="PASS" starttime="20200708 09:36:14.804" endtime="20200708 09:36:14.804"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>8</arg>
<arg>32</arg>
</arguments>
<assign>
<var>${batch_date}</var>
</assign>
<msg timestamp="20200708 09:36:14.804" level="INFO">${batch_date} = 15/10/2018</msg>
<status status="PASS" starttime="20200708 09:36:14.804" endtime="20200708 09:36:14.804"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${batch_date}</arg>
<arg>/</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${batch_date}</var>
</assign>
<msg timestamp="20200708 09:36:14.820" level="INFO">${batch_date} = 15.10.2018</msg>
<status status="PASS" starttime="20200708 09:36:14.820" endtime="20200708 09:36:14.820"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${batch_date}</arg>
</arguments>
<msg timestamp="20200708 09:36:14.820" level="INFO">${batch_date} = 15.10.2018</msg>
<status status="PASS" starttime="20200708 09:36:14.820" endtime="20200708 09:36:14.820"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:12.867" endtime="20200708 09:36:14.820"></status>
</kw>
<kw name="XCSR" library="SharedKeywordsSAN">
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:14.820" endtime="20200708 09:36:14.820"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:14.820" endtime="20200708 09:36:14.820"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:14.820" endtime="20200708 09:36:15.242"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:14.820" endtime="20200708 09:36:15.242"></status>
</kw>
<kw name="Open XDVL" library="Setup_vd_Keywords">
<doc>Opens XDVL screen for plastic card.</doc>
<arguments>
<arg>${plastic}</arg>
</arguments>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>FUNCTION</arg>
<arg>XDVL</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:15.242" endtime="20200708 09:36:15.461"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>ACCOUNT</arg>
<arg>${plasticNumber}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:15.461" endtime="20200708 09:36:16.117"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:16.117" endtime="20200708 09:36:16.539"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:17.542" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:36:16.539" endtime="20200708 09:36:17.542"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:36:17.542" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; XDVL 1 UCS&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; DEVICE LIST                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 08072020  9.36.16
 XDVL      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 20000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 50186 NO MORE DEVICES               
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,CHG,REI,PIN,LSR)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 500-070-263*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NOREGVDGENF NOREGVDGENS    TP BAD AST AA  AA  OUT     1
 4920-6501-0547-7922     NOREGVDGENF NOREGVDGENS    TP DF1 PST AA  PRI ACT     1
                                                                                
 EMB LINE 1&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NOREGVDGENF NOREGVDGENS   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; __________________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 CARD STOCK  CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 040&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND  CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;        REQUESTED BY&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   
 REPLACE PLASTIC?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REPLACEMENT PLASTIC &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                        &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;              
                                                                                
 SELECT:  (XDVD, STMO, WAMO)                                        NXT SEQ&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;    1
 0001&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SEQUENCE&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 858&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   EXPIRY DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/10/2021&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CARD STOCK&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 040&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 EMB LINE 1&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NOREGVDGENF NOREGVDGENS   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 STATUS CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 20 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     WARNING CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 00 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REASON CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SEQUENCE&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   EXPIRY DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CARD STOCK&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 EMB LINE 1&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 STATUS CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     WARNING CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REASON CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SEQUENCE&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   EXPIRY DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CARD STOCK&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 EMB LINE 1&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 STATUS CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     WARNING CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REASON CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                                                     &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 6-INQ 12-RPLPL                                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:36:17.542" endtime="20200708 09:36:17.542"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:15.242" endtime="20200708 09:36:17.542"></status>
</kw>
<kw name="Check XDVL" library="Setup_vd_Keywords">
<arguments>
<arg>${statuscode}</arg>
<arg>${warningcode}</arg>
</arguments>
<kw name="Add Months To Date" library="AddMonthsToDate">
<arguments>
<arg>${online_Date}</arg>
<arg>36</arg>
</arguments>
<assign>
<var>${expDt}</var>
</assign>
<msg timestamp="20200708 09:36:17.558" level="INFO">${expDt} = 16.10.2021</msg>
<status status="PASS" starttime="20200708 09:36:17.542" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expDt}</arg>
</arguments>
<msg timestamp="20200708 09:36:17.558" level="INFO">16.10.2021</msg>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${expDt}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${future_expiration_MM.YYYY}</var>
</assign>
<msg timestamp="20200708 09:36:17.558" level="INFO">${future_expiration_MM.YYYY} = 10.2021</msg>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>12</arg>
<arg>35</arg>
</arguments>
<assign>
<var>${newExpDt}</var>
</assign>
<msg timestamp="20200708 09:36:17.558" level="INFO">${newExpDt} = 31/10/2021</msg>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${newExpDt}</arg>
</arguments>
<msg timestamp="20200708 09:36:17.558" level="INFO">${newExpDt} = 31/10/2021</msg>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${newExpDt}</arg>
<arg>/</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${expiration_dt}</var>
</assign>
<msg timestamp="20200708 09:36:17.558" level="INFO">${expiration_dt} = 31.10.2021</msg>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${expiration_dt}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${expiration_dt_MM.YYYY}</var>
</assign>
<msg timestamp="20200708 09:36:17.558" level="INFO">${expiration_dt_MM.YYYY} = 10.2021</msg>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be equal</arg>
<arg>${future_expiration_MM.YYYY}</arg>
<arg>${expiration_dt_MM.YYYY}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${future_expiration_MM.YYYY}</arg>
<arg>${expiration_dt_MM.YYYY}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:17.558"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:18.558" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:36:17.558" endtime="20200708 09:36:18.558"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>14</arg>
<arg>14</arg>
<arg>${statusCode}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:18.558" endtime="20200708 09:36:18.558"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>14</arg>
<arg>43</arg>
<arg>${warningcode}</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:18.558" endtime="20200708 09:36:18.558"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200708 09:36:18.558" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; XDVL 1 UCS&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; DEVICE LIST                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 08072020  9.36.16
 XDVL      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 20000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 50186 NO MORE DEVICES               
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,CHG,REI,PIN,LSR)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 500-070-263*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NOREGVDGENF NOREGVDGENS    TP BAD AST AA  AA  OUT     1
 4920-6501-0547-7922     NOREGVDGENF NOREGVDGENS    TP DF1 PST AA  PRI ACT     1
                                                                                
 EMB LINE 1&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NOREGVDGENF NOREGVDGENS   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; __________________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 CARD STOCK  CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 040&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND  CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;        REQUESTED BY&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   
 REPLACE PLASTIC?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REPLACEMENT PLASTIC &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                        &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;              
                                                                                
 SELECT:  (XDVD, STMO, WAMO)                                        NXT SEQ&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;    1
 0001&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SEQUENCE&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 858&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   EXPIRY DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/10/2021&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CARD STOCK&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 040&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 EMB LINE 1&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NOREGVDGENF NOREGVDGENS   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 STATUS CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 20 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     WARNING CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 00 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REASON CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SEQUENCE&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   EXPIRY DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CARD STOCK&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 EMB LINE 1&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 STATUS CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     WARNING CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REASON CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SEQUENCE&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   EXPIRY DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CARD STOCK&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    PROX IND&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 EMB LINE 1&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    EMB LINE 2&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
 STATUS CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     WARNING CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   REASON CURR&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                                                     &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 6-INQ 12-RPLPL                                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200708 09:36:18.558" endtime="20200708 09:36:18.558"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:17.542" endtime="20200708 09:36:18.558"></status>
</kw>
<kw name="XCSR" library="SharedKeywordsSAN">
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:18.558" endtime="20200708 09:36:18.574"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:18.574" endtime="20200708 09:36:18.574"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:18.574" endtime="20200708 09:36:18.996"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:18.558" endtime="20200708 09:36:18.996"></status>
</kw>
<kw name="Check CUPR" library="Setup_vd_Keywords">
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>FUNCTION</arg>
<arg>CUPR</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:18.996" endtime="20200708 09:36:19.214"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>ACCOUNT</arg>
<arg>${myplastic}</arg>
</arguments>
<msg timestamp="20200708 09:36:19.214" level="FAIL">Variable '${myplastic}' not found. Did you mean:
    ${plastic}</msg>
<status status="FAIL" starttime="20200708 09:36:19.214" endtime="20200708 09:36:19.214"></status>
</kw>
<status status="FAIL" starttime="20200708 09:36:18.996" endtime="20200708 09:36:19.214"></status>
</kw>
<kw name="Test teardown" library="Set_Teardown" type="teardown">
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywordsSAN">
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:19.214" endtime="20200708 09:36:19.230"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:20.236" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:36:19.230" endtime="20200708 09:36:20.236"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:19.214" endtime="20200708 09:36:20.236"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywordsSAN">
<doc>Logs out of TSO session using *S5TSO* `Sessid`</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:20.236" endtime="20200708 09:36:20.236"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:20.236" endtime="20200708 09:36:20.236"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:20.236" endtime="20200708 09:36:22.861"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:22.861" endtime="20200708 09:36:23.283"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:36:23.611" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:36:23.283" endtime="20200708 09:36:23.721"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:23.721" endtime="20200708 09:36:23.721"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:23.721" endtime="20200708 09:36:24.142"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:25.142" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:36:24.142" endtime="20200708 09:36:25.142"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:20.236" endtime="20200708 09:36:25.142"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywordsSAN">
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:25.142" endtime="20200708 09:36:25.142"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200708 09:36:25.142" endtime="20200708 09:36:25.142"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:25.142" endtime="20200708 09:36:27.768"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:27.768" endtime="20200708 09:36:28.190"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200708 09:36:28.518" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200708 09:36:28.190" endtime="20200708 09:36:28.627"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:28.627" endtime="20200708 09:36:28.627"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:28.627" endtime="20200708 09:36:29.049"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 09:36:30.049" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200708 09:36:29.049" endtime="20200708 09:36:30.049"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:25.142" endtime="20200708 09:36:30.049"></status>
</kw>
<kw name="Log out of mainframe" library="SharedKeywordsSAN">
<doc>Logs out of mainframe.</doc>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>logoff</arg>
</arguments>
<status status="PASS" starttime="20200708 09:36:30.049" endtime="20200708 09:36:30.487"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200708 09:36:30.487" endtime="20200708 09:36:30.908"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:30.049" endtime="20200708 09:36:30.908"></status>
</kw>
<status status="PASS" starttime="20200708 09:36:19.214" endtime="20200708 09:36:30.908"></status>
</kw>
<status status="FAIL" starttime="20200708 09:34:51.113" endtime="20200708 09:36:30.908" critical="yes">Variable '${myplastic}' not found. Did you mean:
    ${plastic}</status>
</test>
<status status="FAIL" starttime="20200708 09:34:50.612" endtime="20200708 09:36:30.908"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Vd Prebatch">Vd Prebatch</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable 'EXPIRY DATE (7,44) = onlinedate + 3 years then EOM' failed: Invalid variable name 'EXPIRY DATE (7,44) = onlinedate + 3 years then EOM'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- OPEN DATE (7,70) = online date' failed: Invalid variable name '- OPEN DATE (7,70) = online date'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- EMB LINE 1 (8,14) = PL_EMB_LN1_NM' failed: Invalid variable name '- EMB LINE 1 (8,14) = PL_EMB_LN1_NM'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- EMB LINE 2 (8, 54) = PL_EMB_LN2_NM' failed: Invalid variable name '- EMB LINE 2 (8, 54) = PL_EMB_LN2_NM'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- CARD STOCK (9,13) = PL_CRD_STK_CD' failed: Invalid variable name '- CARD STOCK (9,13) = PL_CRD_STK_CD'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- PROX IND (9,27) = DV_CLESS_IN' failed: Invalid variable name '- PROX IND (9,27) = DV_CLESS_IN'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- ISSUING BRANCH (9,76) = ISS_BR_NR' failed: Invalid variable name '- ISSUING BRANCH (9,76) = ISS_BR_NR'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- OWNER' failed: Invalid variable name '- OWNER'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- LYL NBR (13,11) = LYL_NBR_PRNTD' failed: Invalid variable name '- LYL NBR (13,11) = LYL_NBR_PRNTD'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- TYPE (13,45) = LYL_TYP' failed: Invalid variable name '- TYPE (13,45) = LYL_TYP'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- PRNTD IND (13,63) = MEMB_PRNTD_IN' failed: Invalid variable name '- PRNTD IND (13,63) = MEMB_PRNTD_IN'.</msg>
<msg timestamp="20200708 09:34:50.612" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Setting variable '- BRANCH (16,27) = DELVRD_BR_NR' failed: Invalid variable name '- BRANCH (16,27) = DELVRD_BR_NR'.</msg>
<msg timestamp="20200708 09:34:51.019" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\vd_prebatch.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200708 09:34:51.050" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\Environments1.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200708 09:34:51.066" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\Setup_vd_Keywords.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200708 09:34:51.081" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\setupVD\Setup_vd_Keywords.robot': Resource file '...\SharedKeywordsSAN.robot' does not exist.</msg>
<msg timestamp="20200708 09:34:51.113" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\SAANA\SharedKeywordsSAN.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200708 09:34:52.159" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:34:54.191" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:34:56.222" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:34:58.254" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200708 09:35:00.292" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
</errors>
</robot>
