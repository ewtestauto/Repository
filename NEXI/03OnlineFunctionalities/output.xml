<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.8.1 on win32)" generated="20200710 12:00:01.623" rpa="false">
<suite id="s1" name="3dot4CrLineMaintenance" source="C:\RobotFramework\PyCharm\NEXI\03OnlineFunctionalities\3dot4CrLineMaintenance.robot">
<test id="s1-t1" name="3dot4 Cr Line Maintenance">
<kw name="Test setup for 03 Setup" library="03SetupKeywords" type="setup">
<arguments>
<arg>${environment_name}</arg>
</arguments>
<kw name="Set environment2" library="Environments">
<arguments>
<arg>${environment name}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>&amp;{environment}</arg>
<arg>owner=</arg>
<arg>appprefix=</arg>
<arg>jobprefix=</arg>
<arg>datasetprefix=</arg>
<arg>cicsk=</arg>
<arg>companynumber=</arg>
<arg>pool=</arg>
<arg>examplecompanyid=</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='RLSEI'</arg>
<arg>Set RLSEI</arg>
</arguments>
<kw name="Set RLSEI" library="Environments">
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>owner=RLSEI</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>appprefix=ICP</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>jobprefix=DBI</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>datasetprefix=icps.rlse.icr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>cicsk=CK35</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>companynumber=30000</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>pool=${SPACE * 2}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${environment}</arg>
<arg>examplecompanyid=03104</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='SITITA04'</arg>
<arg>Set SITITA04</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='IC6'</arg>
<arg>Set IC6</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${environment name}'=='IC7'</arg>
<arg>Set IC7</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:02.108"></status>
</kw>
<kw name="Connect To Mainframe" library="SharedKeywords">
<doc>Connects to Mainframe using the following properties:</doc>
<kw name="Connect" library="py3270lib">
<doc>Connect to a host</doc>
<arguments>
<arg>Y:192.168.14.6:2399</arg>
</arguments>
<msg timestamp="20200710 12:00:03.139" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:05.180" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:07.212" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:09.232" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:11.248" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:12.760"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:00:14.760" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:00:12.760" endtime="20200710 12:00:14.760"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200710 12:00:14.760" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x000002887281F910&gt;</msg>
<status status="PASS" starttime="20200710 12:00:14.760" endtime="20200710 12:00:14.760"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Userid:</arg>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:14.760" endtime="20200710 12:00:14.979"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:14.979" endtime="20200710 12:00:14.979"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Password:</arg>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:14.979" endtime="20200710 12:00:15.417"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200710 12:00:15.417" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200710 12:00:15.417" endtime="20200710 12:00:15.417"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>12</arg>
<arg>25</arg>
<arg>P A Y M E N T \ \ S E R V I C E S \ \ F O R \ \ E U R O P E</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:15.417" endtime="20200710 12:00:15.417"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:15.417" endtime="20200710 12:00:15.840"></status>
</kw>
<kw name="Wait For Field" library="py3270lib">
<doc>Wait until the screen is ready, the cursor has been positioned
on a modifiable field, and the keyboard is unlocked.
Sometimes the server will "unlock" the keyboard but the screen will
not yet be ready.  In that case, an attempt to read or write to the
screen will result in a 'E' keyboard status because we tried to
read from a screen that is not yet ready.
Using this method tells the client to wait until a field is
detected and the cursor has been positioned on it.</doc>
<status status="PASS" starttime="20200710 12:00:15.840" endtime="20200710 12:00:15.840"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:00:15.840" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; MENU TUBES PER    EQTAUT4                &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; Panelid  - MIOMENU 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; TII4012I Signon complete for EQTAUT4 IP address 192.168.50.130 PORT 53061      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                             Terminal - TCPADMYP
 Menu=PF23         Jump=PF24         Help=PF1                Model    - 3278-4E 
 Fwd=PF8           Bwd=PF7                                   System   - PRDA    
                                                                                
    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Sessid&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Sesskey&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Descrizione Sessione&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Stato&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;              
                                                                                
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; S5TSO       PF          EGKT------TSO ON DEV                               
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; TST         PF          TSO - TST1                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SART        PF          SAR - TST1                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; SAREGKT     PF          SAR - EGKT                                         
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK0A        PF          EGKT - NEW CICS A progetto SAAN&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;  N/A               
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK23A       PF          EGKT-CICSK23-COL1(CAMS) A                          
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK23B       PF          EGKT-CICSK23-COL1(CAMS) B                          
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK25        PF          EGKT------QUALITY ASSURANCE                        
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK0B        PF          EGKT - NEW CICS B progetto SAAN                    
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; GROT        PF          GEN. RES. BLT/? TOR SAANA EGKT                     
  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:bold;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; CK35        PF          EGKT-CICSK35-(TEST RLSE)                           
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt; Comando ===&amp;gt;&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                                                &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:00:15.840" endtime="20200710 12:00:15.840"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:15.840"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywords">
<doc>Logs out of TSO session using *S5TSO* `Sessid`.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:15.840" endtime="20200710 12:00:15.840"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:15.840" endtime="20200710 12:00:15.855"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:15.855" endtime="20200710 12:00:18.481"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:18.481" endtime="20200710 12:00:18.903"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:00:19.231" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:00:18.903" endtime="20200710 12:00:19.341"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:19.341" endtime="20200710 12:00:19.341"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:19.341" endtime="20200710 12:00:19.750"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:00:20.750" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:00:19.750" endtime="20200710 12:00:20.750"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:15.840" endtime="20200710 12:00:20.750"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywords">
<doc>Logs out of CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:20.750" endtime="20200710 12:00:20.750"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:20.750" endtime="20200710 12:00:20.750"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:20.750" endtime="20200710 12:00:23.375"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:23.375" endtime="20200710 12:00:23.797"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:00:24.125" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:00:23.797" endtime="20200710 12:00:24.235"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:24.235" endtime="20200710 12:00:24.235"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:24.235" endtime="20200710 12:00:24.657"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:00:25.672" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:00:24.657" endtime="20200710 12:00:25.672"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:20.750" endtime="20200710 12:00:25.672"></status>
</kw>
<kw name="Set UDFL" library="SharedKeywords">
<doc>Sets CICSK parameters in UDFL using company number and pool that are set in `Set environment` Keyword.</doc>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'&amp;{environment}[owner]'=='IC6'</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:25.672" endtime="20200710 12:00:25.672"></status>
</kw>
<kw name="Go to CICSK" library="SharedKeywords">
<doc>Opens CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Select menu Option" library="SharedKeywords">
<doc>Selects given *${Option}* from Menu Tubes screen.</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:25.672" endtime="20200710 12:00:25.672"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:25.672" endtime="20200710 12:00:25.672"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:25.672" endtime="20200710 12:00:28.297"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:28.297" endtime="20200710 12:00:28.719"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:00:29.047" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:00:28.719" endtime="20200710 12:00:29.157"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:29.157" endtime="20200710 12:00:29.157"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:29.157" endtime="20200710 12:00:29.594"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:00:31.594" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:00:29.594" endtime="20200710 12:00:31.594"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:00:31.594" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:00:31.594" endtime="20200710 12:00:31.594"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:25.672" endtime="20200710 12:00:31.594"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:31.594" endtime="20200710 12:00:31.594"></status>
</kw>
<kw name="XCSR" library="SharedKeywords">
<doc>Opens refreshed screen of CICSK.</doc>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:31.594" endtime="20200710 12:00:31.594"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:31.594" endtime="20200710 12:00:31.610"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:31.610" endtime="20200710 12:00:32.032"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:31.594" endtime="20200710 12:00:32.032"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>1</arg>
<arg>MAIN MENU</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:32.032" endtime="20200710 12:00:32.032"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:25.672" endtime="20200710 12:00:32.032"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:32.032" endtime="20200710 12:00:32.032"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>UDFL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:32.032" endtime="20200710 12:00:32.032"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:32.032" endtime="20200710 12:00:32.454"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Company Number =====&gt;</arg>
<arg>&amp;{environment}[companynumber]</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:32.454" endtime="20200710 12:00:33.110"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>DB2 Test Pool ID ===&gt;</arg>
<arg>&amp;{environment}[pool]</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:33.110" endtime="20200710 12:00:34.860"></status>
</kw>
<kw name="Send Pf4" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:34.860" endtime="20200710 12:00:34.860"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>string found</arg>
<arg>2</arg>
<arg>2</arg>
<arg>User defaults updated, new copy performed</arg>
</arguments>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>2</arg>
<arg>2</arg>
<arg>User defaults updated, new copy performed</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:34.860" endtime="20200710 12:00:34.860"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:34.860" endtime="20200710 12:00:34.860"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:34.876" endtime="20200710 12:00:34.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:00:35.878" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:00:34.876" endtime="20200710 12:00:35.878"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:34.876" endtime="20200710 12:00:35.878"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywords">
<doc>Logs out of CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:35.878" endtime="20200710 12:00:35.878"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:35.878" endtime="20200710 12:00:35.878"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:35.878" endtime="20200710 12:00:38.503"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:38.503" endtime="20200710 12:00:38.925"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:00:39.253" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:00:38.925" endtime="20200710 12:00:39.363"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:39.363" endtime="20200710 12:00:39.363"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:39.363" endtime="20200710 12:00:39.784"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:00:40.785" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:00:39.784" endtime="20200710 12:00:40.785"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:35.878" endtime="20200710 12:00:40.785"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:25.672" endtime="20200710 12:00:40.785"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:00:40.785"></status>
</kw>
<kw name="Set plastic expiration date" library="SharedKeywords">
<doc>Sets plastic expiration date as a test variable ${plCurExpDate} in format dd.mm.yyyy.
To do this takes online date and adds given number of days ${noOfDays}.</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="Go to CICSK" library="SharedKeywords">
<doc>Opens CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Select menu Option" library="SharedKeywords">
<doc>Selects given *${Option}* from Menu Tubes screen.</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:40.785" endtime="20200710 12:00:40.785"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:40.801" endtime="20200710 12:00:40.801"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:40.801" endtime="20200710 12:00:43.426"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:43.426" endtime="20200710 12:00:43.848"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:00:44.176" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:00:43.848" endtime="20200710 12:00:44.285"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:44.285" endtime="20200710 12:00:44.285"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:44.285" endtime="20200710 12:00:44.723"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:00:46.723" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:00:44.723" endtime="20200710 12:00:46.723"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:00:46.723" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:00:46.723" endtime="20200710 12:00:46.723"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:40.785" endtime="20200710 12:00:46.723"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:46.723" endtime="20200710 12:00:46.739"></status>
</kw>
<kw name="XCSR" library="SharedKeywords">
<doc>Opens refreshed screen of CICSK.</doc>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:46.739" endtime="20200710 12:00:46.739"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:46.739" endtime="20200710 12:00:46.739"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:46.739" endtime="20200710 12:00:47.160"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:46.739" endtime="20200710 12:00:47.160"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>1</arg>
<arg>MAIN MENU</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:47.160" endtime="20200710 12:00:47.160"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:40.785" endtime="20200710 12:00:47.160"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:47.160" endtime="20200710 12:00:47.285"></status>
</kw>
<kw name="XCSR" library="SharedKeywords">
<doc>Opens refreshed screen of CICSK.</doc>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:47.285" endtime="20200710 12:00:47.285"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:47.285" endtime="20200710 12:00:47.285"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:47.285" endtime="20200710 12:00:47.707"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:47.285" endtime="20200710 12:00:47.707"></status>
</kw>
<kw name="Get environment date" library="SharedKeywords">
<doc>Sets the ${online_date} variable.</doc>
<arguments>
<arg>&amp;{environment}[examplecompanyid]</arg>
</arguments>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:47.707" endtime="20200710 12:00:47.739"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>ucsc</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:47.739" endtime="20200710 12:00:47.739"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:47.739" endtime="20200710 12:00:48.210"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>iicf</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:48.210" endtime="20200710 12:00:48.210"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:48.210" endtime="20200710 12:00:48.635"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:00:48.635" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; IICF 0 UCS&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ICF MAINT--COMPANY RECORD   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.00.48
 IICF      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  1298 ICF CTL REC INQ SUCCESSFUL    
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ,ADD,CHG,DEL)                              
 COID    &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     COMPANY NAME  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; BRAIN 2000 Issuing                      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
                                                                                
                              BATCH CYCLE       ONLINE        NEXT              
 SYSTEM PROCESS DATES:        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                            &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; __________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
                                                                                
                                                                                
         TAX YEAR END DATE                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; __________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURRENT TAX YEAR                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                 
         PREVIOUS TAX YEAR END DATE        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         MONTH END DATE                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         QUARTER END DATE                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         YEAR END DATE                     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - FIRST BUSINESS DATE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV BATCH CYCLE DATE             &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
                                                                                
                                                                                
 LAST MAINT:   DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TIME &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   BY &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   FROM &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         
 PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 4-CHG 5-ADD 6-INQ -DEL                                                     
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:00:48.635" endtime="20200710 12:00:48.635"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>COID</arg>
<arg>${company id}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:48.635" endtime="20200710 12:00:49.729"></status>
</kw>
<kw name="Send Pf6" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:49.729" endtime="20200710 12:00:49.729"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:00:49.744" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; IICF 0 UCS&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ICF MAINT--COMPANY RECORD   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.00.49
 IICF      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  1298 ICF CTL REC INQ SUCCESSFUL    
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ,ADD,CHG,DEL)                              
 COID    &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;  3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     COMPANY NAME  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; Serv. BankAmericard                     &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
                                                                                
                              BATCH CYCLE       ONLINE        NEXT              
 SYSTEM PROCESS DATES:        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020     09/07/2020  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 10/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
                                                                                
                                                                                
         TAX YEAR END DATE                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURRENT TAX YEAR                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 120&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                 
         PREVIOUS TAX YEAR END DATE        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2019&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         MONTH END DATE                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         QUARTER END DATE                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/09/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         YEAR END DATE                     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - FIRST BUSINESS DATE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/06/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV BATCH CYCLE DATE             &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/06/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
                                                                                
                                                                                
 LAST MAINT:   DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TIME &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 13.28.29&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   BY &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; DBIIPR10&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   FROM &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         
 PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 4-CHG 5-ADD 6-INQ -DEL                                                     
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:00:49.729" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>8</arg>
<arg>47</arg>
</arguments>
<assign>
<var>${online_date}</var>
</assign>
<msg timestamp="20200710 12:00:49.744" level="INFO">${online_date} = 09/07/2020</msg>
<status status="PASS" starttime="20200710 12:00:49.744" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${online_date}</arg>
<arg>/</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${online_date}</var>
</assign>
<msg timestamp="20200710 12:00:49.744" level="INFO">${online_date} = 09.07.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.744" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${online_date}</arg>
</arguments>
<msg timestamp="20200710 12:00:49.744" level="INFO">${online_date} = 09.07.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.744" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>8</arg>
<arg>32</arg>
</arguments>
<assign>
<var>${batch_date}</var>
</assign>
<msg timestamp="20200710 12:00:49.744" level="INFO">${batch_date} = 01/07/2020</msg>
<status status="PASS" starttime="20200710 12:00:49.744" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${batch_date}</arg>
<arg>/</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${batch_date}</var>
</assign>
<msg timestamp="20200710 12:00:49.744" level="INFO">${batch_date} = 01.07.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.744" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${batch_date}</arg>
</arguments>
<msg timestamp="20200710 12:00:49.744" level="INFO">${batch_date} = 01.07.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.744" endtime="20200710 12:00:49.744"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:47.707" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:00:49.744" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; IICF 0 UCS&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ICF MAINT--COMPANY RECORD   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.00.49
 IICF      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  1298 ICF CTL REC INQ SUCCESSFUL    
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ,ADD,CHG,DEL)                              
 COID    &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;  3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     COMPANY NAME  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; Serv. BankAmericard                     &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
                                                                                
                              BATCH CYCLE       ONLINE        NEXT              
 SYSTEM PROCESS DATES:        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020     09/07/2020  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 10/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
                                                                                
                                                                                
         TAX YEAR END DATE                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURRENT TAX YEAR                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 120&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                 
         PREVIOUS TAX YEAR END DATE        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2019&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         MONTH END DATE                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         QUARTER END DATE                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/09/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         YEAR END DATE                     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - FIRST BUSINESS DATE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/06/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV BATCH CYCLE DATE             &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/06/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
                                                                                
                                                                                
 LAST MAINT:   DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TIME &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 13.28.29&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   BY &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; DBIIPR10&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   FROM &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         
 PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 4-CHG 5-ADD 6-INQ -DEL                                                     
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:00:49.744" endtime="20200710 12:00:49.744"></status>
</kw>
<kw name="Future date" library="SharedKeywords">
<doc>For given date ${date} in format dd.mm.yyyy, e.g. online date, converts format and adds number of days 30.
After that converts future date in format to dd.mm.yyyy.</doc>
<arguments>
<arg>${online_date}</arg>
<arg>${noOfDays}</arg>
</arguments>
<assign>
<var>${plCurExpDate}</var>
</assign>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${date}</arg>
<arg>date_format=%d.%m.%Y</arg>
</arguments>
<assign>
<var>${convDate}</var>
</assign>
<msg timestamp="20200710 12:00:49.760" level="INFO">${convDate} = 2020-07-09 00:00:00.000</msg>
<status status="PASS" starttime="20200710 12:00:49.760" endtime="20200710 12:00:49.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${convDate}</arg>
</arguments>
<msg timestamp="20200710 12:00:49.760" level="INFO">2020-07-09 00:00:00.000</msg>
<status status="PASS" starttime="20200710 12:00:49.760" endtime="20200710 12:00:49.760"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${convDate}</arg>
<arg>${noOfDays} days</arg>
</arguments>
<assign>
<var>${futureDate}</var>
</assign>
<msg timestamp="20200710 12:00:49.760" level="INFO">${futureDate} = 2020-08-08 00:00:00.000</msg>
<status status="PASS" starttime="20200710 12:00:49.760" endtime="20200710 12:00:49.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${futureDate}</arg>
</arguments>
<msg timestamp="20200710 12:00:49.760" level="INFO">2020-08-08 00:00:00.000</msg>
<status status="PASS" starttime="20200710 12:00:49.760" endtime="20200710 12:00:49.760"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${futureDate}</arg>
<arg>result_format=%d.%m.%Y</arg>
</arguments>
<assign>
<var>${futureDate}</var>
</assign>
<msg timestamp="20200710 12:00:49.775" level="INFO">${futureDate} = 08.08.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.775" endtime="20200710 12:00:49.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${futureDate}</arg>
</arguments>
<msg timestamp="20200710 12:00:49.775" level="INFO">08.08.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.775" endtime="20200710 12:00:49.775"></status>
</kw>
<msg timestamp="20200710 12:00:49.775" level="INFO">${plCurExpDate} = 08.08.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.760" endtime="20200710 12:00:49.775"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${plCurExpDate}</arg>
</arguments>
<msg timestamp="20200710 12:00:49.775" level="INFO">${plCurExpDate} = 08.08.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.775" endtime="20200710 12:00:49.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${plCurExpDate}</arg>
</arguments>
<msg timestamp="20200710 12:00:49.775" level="INFO">08.08.2020</msg>
<status status="PASS" starttime="20200710 12:00:49.775" endtime="20200710 12:00:49.775"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:49.775" endtime="20200710 12:00:49.775"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:00:50.775" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:00:49.775" endtime="20200710 12:00:50.775"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:49.775" endtime="20200710 12:00:50.775"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:40.785" endtime="20200710 12:00:50.775"></status>
</kw>
<kw name="Log in to TSO" library="SharedKeywords">
<doc>Logs into TSO using *S5TSO*.</doc>
<kw name="Select menu Option" library="SharedKeywords">
<doc>Selects given *${Option}* from Menu Tubes screen.</doc>
<arguments>
<arg>S5TSO</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:50.775" endtime="20200710 12:00:50.775"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:00:50.775" endtime="20200710 12:00:50.775"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:50.775" endtime="20200710 12:00:53.401"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:53.401" endtime="20200710 12:00:53.822"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:00:54.151" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:00:53.822" endtime="20200710 12:00:54.260"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:54.260" endtime="20200710 12:00:54.260"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:54.260" endtime="20200710 12:00:54.697"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:00:56.701" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:00:54.697" endtime="20200710 12:00:56.701"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:00:56.701" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; IKJ56700A ENTER USERID -&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                       
&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:00:56.701" endtime="20200710 12:00:56.701"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:50.775" endtime="20200710 12:00:56.701"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200710 12:00:56.701" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x000002887281F100&gt;</msg>
<status status="PASS" starttime="20200710 12:00:56.701" endtime="20200710 12:00:56.701"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:56.701" endtime="20200710 12:00:56.701"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:56.701" endtime="20200710 12:00:57.123"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:57.123" endtime="20200710 12:00:57.123"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:57.123" endtime="20200710 12:00:57.123"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200710 12:00:57.123" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200710 12:00:57.123" endtime="20200710 12:00:57.123"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:57.123" endtime="20200710 12:00:57.829"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>ispf</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:57.829" endtime="20200710 12:00:57.829"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:57.829" endtime="20200710 12:00:58.797"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>ISPF Primary Option Menu</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:58.797" endtime="20200710 12:00:58.797"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:50.775" endtime="20200710 12:00:58.797"></status>
</kw>
<kw name="Find plastic for test 3.4 Cr Line Maintenance" library="3dot4CrLineMaintenanceKeywords">
<doc>Chooses plastic card for test 3.4 Credit Line Maintenance with given expiration date in format dd.mm.yyyy
and sets number of plastic as a test variable ${myPlastic}, account internal ID as a test variable
${myAccountIntID} and Company Id number for choosen plastic as a test variable ${myCompanyId}.</doc>
<arguments>
<arg>${plCurExpDate}</arg>
</arguments>
<kw name="From ISPF go to SQL query" library="SharedKeywords">
<doc>When the system is in TSO, on ISPF screen (first screen), this keyword goes to
the screen where you can enter an SQL query. Used in: 'Verify plastic on table pre-batch',
'verify plastic embossed on CAPI' in NEXI/01a.plastic_setup/PlasticSetupKeywords.robot</doc>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>r</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:58.797" endtime="20200710 12:00:58.797"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:58.797" endtime="20200710 12:00:59.251"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" starttime="20200710 12:00:59.251" endtime="20200710 12:00:59.251"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:00:59.251" endtime="20200710 12:01:00.063"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:00.063" endtime="20200710 12:01:00.063"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:00.063" endtime="20200710 12:01:00.735"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:00.735" endtime="20200710 12:01:00.735"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:00.735" endtime="20200710 12:01:01.611"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:02.612" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:01.611" endtime="20200710 12:01:02.612"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>25</arg>
<arg>Enter, Execute and Explain SQL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:58.797" endtime="20200710 12:01:02.612"></status>
</kw>
<kw name="Send query" library="SharedKeywords">
<doc>Sends given sql query *${Input query}*.</doc>
<arguments>
<arg>SELECT B.PL_ID, A.AC_INTRL_ID, A.AC_CO_NR</arg>
<arg>FROM &amp;{environment}[owner].DCTAC_ACCOUNT A,</arg>
<arg>&amp;{environment}[owner].DCTPL_PLASTIC B</arg>
<arg>WHERE A.AC_INTRL_ID = B.AC_INTRL_ID</arg>
<arg>AND A.AC_CRD_TYP_CD = 'C'</arg>
<arg>AND B.PL_CUR_STAT_CD</arg>
<arg>= 'AA'</arg>
<arg>AND B.PL_CUR_STAT_RSN_CD = 'AA'</arg>
<arg>AND B.PL_CUR_EXP_DT &gt; '${date}'</arg>
<arg>WITH UR;</arg>
</arguments>
<kw name="${line} IN [ @{Input query} ]" type="for">
<kw name="${line} = SELECT B.PL_ID, A.AC_INTRL_ID, A.AC_CO_NR" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<kw name="${line} = FROM RLSEI.DCTAC_ACCOUNT A," type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<kw name="${line} = RLSEI.DCTPL_PLASTIC B" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.612"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="${line} = WHERE A.AC_INTRL_ID = B.AC_INTRL_ID" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="${line} = AND A.AC_CRD_TYP_CD = 'C'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="${line} = AND B.PL_CUR_STAT_CD" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="${line} = = 'AA'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="${line} = AND B.PL_CUR_STAT_RSN_CD = 'AA'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="${line} = AND B.PL_CUR_EXP_DT &gt; '08.08.2020'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="${line} = WITH UR;" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.627"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.643"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.627" endtime="20200710 12:01:02.643"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.643"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:02.612" endtime="20200710 12:01:02.643"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:03.654" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:02.643" endtime="20200710 12:01:03.654"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:03.654" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 
 EGKT 2 (DB3)           Enter, Execute and Explain SQL                         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                                &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; SELECT Options:                       EXPLAIN Options:                         
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;    Row count . . . . .&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; 100       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;        Query number  . . .&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;        
                                                                                
    Enter "/" to select option        &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;                                          
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; /&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Show results                     &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                        
                                         &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                     
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; SQL statement:                       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                          
 SELECT B.PL_ID, A.AC_INTRL_ID, A.AC_CO_NR                               &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; FROM RLSEI.DCTAC_ACCOUNT A,                                             &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; RLSEI.DCTPL_PLASTIC B                                                   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; WHERE A.AC_INTRL_ID = B.AC_INTRL_ID                                     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; AND A.AC_CRD_TYP_CD = 'C'                                               &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; AND B.PL_CUR_STAT_CD                                                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; = 'AA'                                                                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; AND B.PL_CUR_STAT_RSN_CD = 'AA'                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; AND B.PL_CUR_EXP_DT &amp;gt; '08.08.2020'                                      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; WITH UR;                                                                &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:03.654" endtime="20200710 12:01:03.654"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:03.654" endtime="20200710 12:01:04.154"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:04.154" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;               Top of 100&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 100 rows - Row count limit.                                       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 PL_ID                      AC_INTRL_ID AC_CO_NR                                
 #6                                  #2       #5                                
 CHARACTER(23)            DECIMAL(13,0) DEC(5,0)                                
 &amp;lt;---+----1----+----2--&amp;gt; PU--+----1---&amp;gt;   &amp;lt;U--+&amp;gt;                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935470031098491       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;    28897000000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097916       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   146001340000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5587930031098195       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   120577330000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935290031098204       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1455232450000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4024254391541700       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   137745510000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096101       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1092061520000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096119       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1574290820000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5471760031097528       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   376544030000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096127       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;    64864060000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096135       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   572833880000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097361       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   281172360000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097510       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   278192790000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127973193954778       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   262678340000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031098120       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   303004100000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5534350031098265       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1542454880000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127977824873877       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   233457690000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5189450031097610       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   230452430000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935120031098039       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   243078830000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935120031098377       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   246210170000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127972010314570       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   264743770000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031098088       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   348925350000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127975640574687       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   390522520000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127974806772748       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   398925010000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031098369       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   358400480000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4324520031097270       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   326772120000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4324520031097288       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1306775220000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096010       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1167822830000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096028       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   816471030000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096036       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   399133730000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096044       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1535236430000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097544       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   454648400000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097551       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   454648400000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097692       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   449131770000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:04.154" endtime="20200710 12:01:04.154"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>Select Statement Browse</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:04.154" endtime="20200710 12:01:04.154"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${myPlastic}</var>
</assign>
<msg timestamp="20200710 12:01:04.154" level="INFO">${myPlastic} = 4935470031098491</msg>
<status status="PASS" starttime="20200710 12:01:04.154" endtime="20200710 12:01:04.154"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myPlastic}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.154" level="INFO">${myPlastic} = 4935470031098491</msg>
<status status="PASS" starttime="20200710 12:01:04.154" endtime="20200710 12:01:04.154"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 26 | 29 ]" type="for">
<kw name="${INDEX} = 26" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.154" level="INFO">26</msg>
<status status="PASS" starttime="20200710 12:01:04.154" endtime="20200710 12:01:04.154"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${myAccountIntID}</var>
</assign>
<msg timestamp="20200710 12:01:04.170" level="INFO">${myAccountIntID} = </msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${myAccountIntID}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${myAccountIntID}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.170" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:04.170" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<msg timestamp="20200710 12:01:04.170" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.170" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:04.154" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="${INDEX} = 27" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.170" level="INFO">27</msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${myAccountIntID}</var>
</assign>
<msg timestamp="20200710 12:01:04.170" level="INFO">${myAccountIntID} = </msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${myAccountIntID}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${myAccountIntID}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.170" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:04.170" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<msg timestamp="20200710 12:01:04.170" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.170" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.170"></status>
</kw>
<kw name="${INDEX} = 28" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.170" level="INFO">28</msg>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.185"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${myAccountIntID}</var>
</assign>
<msg timestamp="20200710 12:01:04.201" level="INFO">${myAccountIntID} =  28897000000</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${myAccountIntID}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${myAccountIntID}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">Length is 12</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<msg timestamp="20200710 12:01:04.201" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">True</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:04.170" endtime="20200710 12:01:04.201"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:04.154" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myAccountIntID}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">${myAccountIntID} =  28897000000</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 44 | 47 ]" type="for">
<kw name="${INDEX} = 44" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">44</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${myCompanyId}</var>
</assign>
<msg timestamp="20200710 12:01:04.201" level="INFO">${myCompanyId} =  3104</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${myCompanyId}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${myCompanyId}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<msg timestamp="20200710 12:01:04.201" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">True</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myCompanyId}</arg>
</arguments>
<msg timestamp="20200710 12:01:04.201" level="INFO">${myCompanyId} =  3104</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.201"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:04.216" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;               Top of 100&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 100 rows - Row count limit.                                       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 PL_ID                      AC_INTRL_ID AC_CO_NR                                
 #6                                  #2       #5                                
 CHARACTER(23)            DECIMAL(13,0) DEC(5,0)                                
 &amp;lt;---+----1----+----2--&amp;gt; PU--+----1---&amp;gt;   &amp;lt;U--+&amp;gt;                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935470031098491       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;    28897000000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097916       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   146001340000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5587930031098195       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   120577330000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935290031098204       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1455232450000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4024254391541700       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   137745510000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096101       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1092061520000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096119       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1574290820000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5471760031097528       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   376544030000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096127       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;    64864060000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096135       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   572833880000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097361       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   281172360000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097510       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   278192790000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127973193954778       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   262678340000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031098120       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   303004100000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5534350031098265       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1542454880000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127977824873877       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   233457690000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5189450031097610       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   230452430000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935120031098039       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   243078830000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4935120031098377       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   246210170000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127972010314570       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   264743770000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031098088       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   348925350000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127975640574687       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   390522520000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127974806772748       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   398925010000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  33155&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031098369       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   358400480000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4324520031097270       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   326772120000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4324520031097288       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1306775220000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096010       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1167822830000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096028       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   816471030000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096036       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   399133730000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5127748031096044       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;  1535236430000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   5584&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097544       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   454648400000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097551       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   454648400000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 5425320031097692       &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   449131770000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;   3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:04.201" endtime="20200710 12:01:04.216"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:58.797" endtime="20200710 12:01:04.216"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:04.216" endtime="20200710 12:01:04.216"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:05.216" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:04.216" endtime="20200710 12:01:05.216"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:04.216" endtime="20200710 12:01:05.216"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywords">
<doc>Logs out of TSO session using *S5TSO* `Sessid`.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:05.216" endtime="20200710 12:01:05.216"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:05.216" endtime="20200710 12:01:05.216"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:05.216" endtime="20200710 12:01:07.853"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:07.853" endtime="20200710 12:01:08.275"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:01:08.603" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:01:08.275" endtime="20200710 12:01:08.712"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:08.712" endtime="20200710 12:01:08.712"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:08.712" endtime="20200710 12:01:09.134"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:10.136" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:09.134" endtime="20200710 12:01:10.136"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:05.216" endtime="20200710 12:01:10.136"></status>
</kw>
<kw name="Go to CICSK" library="SharedKeywords">
<doc>Opens CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Select menu Option" library="SharedKeywords">
<doc>Selects given *${Option}* from Menu Tubes screen.</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:10.136" endtime="20200710 12:01:10.136"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:10.136" endtime="20200710 12:01:10.136"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:10.136" endtime="20200710 12:01:12.761"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:12.761" endtime="20200710 12:01:13.183"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:01:13.511" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:01:13.183" endtime="20200710 12:01:13.620"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:13.620" endtime="20200710 12:01:13.620"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:13.620" endtime="20200710 12:01:14.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:01:16.048" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:01:14.042" endtime="20200710 12:01:16.048"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:16.048" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; IICF 0 UCS&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ICF MAINT--COMPANY RECORD   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.00.49
 IICF      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  1298 ICF CTL REC INQ SUCCESSFUL    
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ,ADD,CHG,DEL)                              
 COID    &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;  3104&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     COMPANY NAME  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; Serv. BankAmericard                     &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
                                                                                
                              BATCH CYCLE       ONLINE        NEXT              
 SYSTEM PROCESS DATES:        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020     09/07/2020  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 10/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
                                                                                
                                                                                
         TAX YEAR END DATE                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURRENT TAX YEAR                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 120&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                 
         PREVIOUS TAX YEAR END DATE        &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2019&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         MONTH END DATE                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         QUARTER END DATE                  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/09/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         YEAR END DATE                     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - FIRST BUSINESS DATE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         CURR MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 31/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV MONTH - LAST BUSINESS DATE   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/06/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
         PREV BATCH CYCLE DATE             &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30/06/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                          
                                                                                
                                                                                
 LAST MAINT:   DATE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TIME &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 13.28.29&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   BY &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; DBIIPR10&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   FROM &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         
 PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 4-CHG 5-ADD 6-INQ -DEL                                                     
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:16.048" endtime="20200710 12:01:16.048"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:10.136" endtime="20200710 12:01:16.048"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:16.048" endtime="20200710 12:01:16.048"></status>
</kw>
<kw name="XCSR" library="SharedKeywords">
<doc>Opens refreshed screen of CICSK.</doc>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:16.048" endtime="20200710 12:01:16.064"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:16.064" endtime="20200710 12:01:16.064"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:16.064" endtime="20200710 12:01:16.486"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:16.048" endtime="20200710 12:01:16.486"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>1</arg>
<arg>MAIN MENU</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:16.486" endtime="20200710 12:01:16.486"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:10.136" endtime="20200710 12:01:16.486"></status>
</kw>
<kw name="Open CCLS Get Line Amounts" library="3dot4CrLineMaintenanceKeywords">
<doc>Opens CCLS screen for given plastic card number.
Fills out with data from test variables: ${transactionCode}, ${transactionReasonCode}, ${transactionCurrencyCode},
${transactionAmount}, ${transactionDescription}.</doc>
<arguments>
<arg>${myPlastic}</arg>
</arguments>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:16.486" endtime="20200710 12:01:16.501"></status>
</kw>
<kw name="XCSR" library="SharedKeywords">
<doc>Opens refreshed screen of CICSK.</doc>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:16.501" endtime="20200710 12:01:16.501"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:16.501" endtime="20200710 12:01:16.501"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:16.501" endtime="20200710 12:01:16.923"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:16.501" endtime="20200710 12:01:16.923"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:16.923" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  BRAIN 2.6 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; DATE : 10/07/2020
                              BRAIN 2000 Issuing               TIME :  12.01.16&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 
MAIN MENU                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 53572 Terminal records RESET       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
--------------------------------------------------------------------------------
 FUNCTION :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;_&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                           BANK CODE :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; BRAIN 2000 Issuing 
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACCOUNT  :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _______________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  FISCAL CODE-IVA :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;         
 SURNAME  :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _________________________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   NAME :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       
  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ** **** ****************************  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ** **** ****************************
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 01&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU01&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CARDHOLDER SETUP/MAINT.       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 09&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU08&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; LOYALTY MANAGEMENT          
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 02&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU02&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CUSTOMER SERVICE              &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 10&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU09&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; FRAUD PROCESSING            
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 03&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU03&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; PRICING                       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 11&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU10&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; INCOMING / OUTGOING         
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 04&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU04&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; FINANCIAL CLAIMS - NOT-ON-US  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 12&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU11&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; THIRD PARTY MANAGEMENT      
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 05&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU05&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; FINANCIAL CLAIMS - ON-US      &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 13&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU12&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SPECIAL FUNCTIONS           
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 06&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU06&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EXTENDED CREDIT               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 14&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU13&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; GENERAL LEDGER PROCESSING   
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 07&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU07&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE MANAGEMENT        &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 15&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU14&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OUTSTANDING TRANSACTIONS    
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 16&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU15&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; XPSR-MENU                   
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 17&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU16&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; DEBIT CARD PROCESSING       
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 08&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; EXIT&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EXIT APPLICATION              &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 18&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU17&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; PRE-PAID/PRE-ISSUE CARDS    
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 19&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU18&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CORPORATE CARDS FUNCTIONS   
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 20&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU19&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; XLRD-MENU                   
--------------------------------------------------------------------------------
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 4-MAIN.M 7-PREV.M 8-NEXT.M 12-RESET                                 
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:16.923" endtime="20200710 12:01:16.923"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>FUNCTION</arg>
<arg>CCLS</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:16.923" endtime="20200710 12:01:17.142"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>ACCOUNT</arg>
<arg>${plasticNumber}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:17.142" endtime="20200710 12:01:17.798"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:17.798" endtime="20200710 12:01:18.236"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:19.237" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:18.236" endtime="20200710 12:01:19.237"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:19.237" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLS 1 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT/CASH LINE SELECTION &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.01.17
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  3992 NO MORE CRD LINES             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ, CCLM)                                     
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
 4935-4700-3109-8491     VALENTINA SERRA            TP VPJ PST AA  PRI ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; SERRA VALENTINA                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRI&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 ACTN/                           CRD                CASH           NEXT:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;    1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   
 SEQ      STRT       EXP    PERM DCSN      CREDIT   DCSN   CSH          CASH    
 (SEL)    DATE       DATE   TEMP LN CD    LINE AMT  LN CD  LN%        LINE AMT  
      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.210  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.210 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 001&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.210  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.210 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 002&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 08/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.205  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.205 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 003&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020 09/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.200  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.200 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                        &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                 0     &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;             0 
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACCT: OPEN DT  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    RETURNED MAIL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; N&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   PGM SOLIC CD&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 41PEFGXX&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          
                                                                                
                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                  
 DELQ HISTORY       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   CURR AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                    
 BAL TO LINE RATIO  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   DT&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 PMT TO BAL RATIO   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH BAL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;               ,00 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  
                                                 HIGH BAL DT &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 6-INQ 10-CCLM                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:19.237" endtime="20200710 12:01:19.237"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>12</arg>
<arg>46</arg>
</arguments>
<assign>
<var>${myCreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.237" level="INFO">${myCreditLineAmount} = 5.210</msg>
<status status="PASS" starttime="20200710 12:01:19.237" endtime="20200710 12:01:19.237"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myCreditLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:19.237" level="INFO">${myCreditLineAmount} = 5.210</msg>
<status status="PASS" starttime="20200710 12:01:19.237" endtime="20200710 12:01:19.237"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>12</arg>
<arg>75</arg>
</arguments>
<assign>
<var>${myCashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.237" level="INFO">${myCashLineAmount} = 5.210</msg>
<status status="PASS" starttime="20200710 12:01:19.237" endtime="20200710 12:01:19.237"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myCashLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:19.237" level="INFO">${myCashLineAmount} = 5.210</msg>
<status status="PASS" starttime="20200710 12:01:19.237" endtime="20200710 12:01:19.237"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${myCreditLineAmount}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${myCreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.237" level="INFO">${myCreditLineAmount} = 5210</msg>
<status status="PASS" starttime="20200710 12:01:19.237" endtime="20200710 12:01:19.237"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${myCreditLineAmount}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${myCreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myCreditLineAmount} = 5210.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${myCreditLineAmount})+5</arg>
</arguments>
<assign>
<var>${myNew1CreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CreditLineAmount} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${myNew1CreditLineAmount})+5</arg>
</arguments>
<assign>
<var>${myNew2CreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew2CreditLineAmount} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${myNew1CreditLineAmount}</arg>
</arguments>
<assign>
<var>${myNew1CreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CreditLineAmount} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${myNew2CreditLineAmount}</arg>
</arguments>
<assign>
<var>${myNew2CreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew2CreditLineAmount} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${myNew1CreditLineAmount}</arg>
<arg>0</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>${myNew1CreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CreditLineAmount} = 5215</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${myNew2CreditLineAmount}</arg>
<arg>0</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>${myNew2CreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew2CreditLineAmount} = 5220</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myNew1CreditLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CreditLineAmount} = 5215</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myNew2CreditLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew2CreditLineAmount} = 5220</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${myCashLineAmount}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${myCashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myCashLineAmount} = 5210</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${myCashLineAmount}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${myCashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myCashLineAmount} = 5210.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${myCashLineAmount})+5</arg>
</arguments>
<assign>
<var>${myNew1CashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CashLineAmount} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${myNew1CashLineAmount})+5</arg>
</arguments>
<assign>
<var>${myNew2CashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew2CashLineAmount} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${myNew1CashLineAmount}</arg>
</arguments>
<assign>
<var>${myNew1CashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CashLineAmount} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${myNew2CashLineAmount}</arg>
</arguments>
<assign>
<var>${myNew2CashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew2CashLineAmount} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${myNew1CashLineAmount}</arg>
<arg>0</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>${myNew1CashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CashLineAmount} = 5215</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${myNew2CashLineAmount}</arg>
<arg>0</arg>
<arg>-2</arg>
</arguments>
<assign>
<var>${myNew2CashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew2CashLineAmount} = 5220</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myNew1CashLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:19.252" level="INFO">${myNew1CashLineAmount} = 5215</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.252"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${myNew2CashLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:19.268" level="INFO">${myNew2CashLineAmount} = 5220</msg>
<status status="PASS" starttime="20200710 12:01:19.252" endtime="20200710 12:01:19.268"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:16.486" endtime="20200710 12:01:19.268"></status>
</kw>
<kw name="From CCLS To CCLM Add New Line Amounts" library="3dot4CrLineMaintenanceKeywords">
<arguments>
<arg>${myNew1CreditLineAmount}</arg>
<arg>${myNew1CashLineAmount}</arg>
<arg>${online_date}</arg>
</arguments>
<kw name="Send Pf10" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:19.268" endtime="20200710 12:01:19.268"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:19.283" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLM 2 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CREDIT LINE MAINT       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.01.19
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     1 ACTION SUCCESSFUL             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,NXT,ADD,CHG,DEL)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE AMOUNT     &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.210 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   WAIVE CR LINE INC FEE?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
 CREDIT LN DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CREDIT LINE                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH LINE AMOUNT       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.210 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 CASH LINE DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CASH LINE                           
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH PERCENT                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                             
 CASH CAP               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                0 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE START DT                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE EXPIRY DT                &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2799&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LETTER(Y/N)            &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      LETTER ID   &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 5-ADD 6-INQ 9-NXT 10-CCLS -DEL                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:19.268" endtime="20200710 12:01:19.283"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>CREDIT LINE AMOUNT</arg>
<arg>${newCrLAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:19.283" endtime="20200710 12:01:20.596"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>CASH LINE AMOUNT</arg>
<arg>${newCashLAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:20.596" endtime="20200710 12:01:22.568"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>LINE START DT</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:22.568" endtime="20200710 12:01:25.412"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:25.412" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLM 2 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CREDIT LINE MAINT       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.01.19
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     1 ACTION SUCCESSFUL             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; INQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,NXT,ADD,CHG,DEL)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE AMOUNT     &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 5215             &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   WAIVE CR LINE INC FEE?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
 CREDIT LN DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CREDIT LINE                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH LINE AMOUNT       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 5215             &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 CASH LINE DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CASH LINE                           
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH PERCENT                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                             
 CASH CAP               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                0 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE START DT                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE EXPIRY DT                &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;3&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;1/12/2799&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LETTER(Y/N)            &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      LETTER ID   &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 5-ADD 6-INQ 9-NXT 10-CCLS -DEL                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:25.412" endtime="20200710 12:01:25.412"></status>
</kw>
<kw name="Send Pf5" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:25.412" endtime="20200710 12:01:25.428"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:25.444" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLM 2 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CREDIT LINE MAINT       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.01.25
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     2 ADD SUCCESSFUL                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;A&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;DD                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,NXT,ADD,CHG,DEL)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE AMOUNT     &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.215 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   WAIVE CR LINE INC FEE?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
 CREDIT LN DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CREDIT LINE                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH LINE AMOUNT       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.215 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 CASH LINE DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CASH LINE                           
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH PERCENT                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                             
 CASH CAP               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                0 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE START DT                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE EXPIRY DT                &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2799&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LETTER(Y/N)            &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      LETTER ID   &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 5-ADD 6-INQ 9-NXT 10-CCLS -DEL                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:25.428" endtime="20200710 12:01:25.444"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>2</arg>
<arg>51</arg>
<arg>ADD SUCCESSFUL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:25.444" endtime="20200710 12:01:25.444"></status>
</kw>
<kw name="Send Pf10" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:25.444" endtime="20200710 12:01:25.459"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:25.475" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLS 3 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT/CASH LINE SELECTION &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.01.25
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  3992 NO MORE CRD LINES             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ, CCLM)                                     
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; SERRA VALENTINA                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRI&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 ACTN/                           CRD                CASH           NEXT:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;    1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   
 SEQ      STRT       EXP    PERM DCSN      CREDIT   DCSN   CSH          CASH    
 (SEL)    DATE       DATE   TEMP LN CD    LINE AMT  LN CD  LN%        LINE AMT  
      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.215  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.215 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 001&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.215  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.215 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 002&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 08/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.210  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.210 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 003&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 08/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.205  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.205 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 004&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020 09/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.200  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.200 
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACCT: OPEN DT  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    RETURNED MAIL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; N&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   PGM SOLIC CD&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 41PEFGXX&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          
                                                                                
                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                  
 DELQ HISTORY       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   CURR AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                    
 BAL TO LINE RATIO  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   DT&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 PMT TO BAL RATIO   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH BAL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;               ,00 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  
                                                 HIGH BAL DT &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 6-INQ 10-CCLM                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:25.459" endtime="20200710 12:01:25.475"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>NEXT:</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:25.475" endtime="20200710 12:01:26.787"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:26.787" endtime="20200710 12:01:27.209"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:27.209" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLS 3 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT/CASH LINE SELECTION &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.01.26
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  3992 NO MORE CRD LINES             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ, CCLM)                                     
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; SERRA VALENTINA                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRI&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 ACTN/                           CRD                CASH           NEXT:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;    1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   
 SEQ      STRT       EXP    PERM DCSN      CREDIT   DCSN   CSH          CASH    
 (SEL)    DATE       DATE   TEMP LN CD    LINE AMT  LN CD  LN%        LINE AMT  
      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.215  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.215 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 001&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.215  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.215 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 002&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 08/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.210  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.210 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 003&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 08/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.205  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.205 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 004&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020 09/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.200  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.200 
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACCT: OPEN DT  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    RETURNED MAIL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; N&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   PGM SOLIC CD&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 41PEFGXX&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          
                                                                                
                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                  
 DELQ HISTORY       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   CURR AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                    
 BAL TO LINE RATIO  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   DT&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 PMT TO BAL RATIO   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH BAL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;               ,00 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  
                                                 HIGH BAL DT &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 6-INQ 10-CCLM                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:27.209" endtime="20200710 12:01:27.209"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:19.268" endtime="20200710 12:01:27.209"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:27.209" endtime="20200710 12:01:27.225"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:28.225" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:27.225" endtime="20200710 12:01:28.225"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:27.209" endtime="20200710 12:01:28.225"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywords">
<doc>Logs out of CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:28.225" endtime="20200710 12:01:28.225"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:28.225" endtime="20200710 12:01:28.225"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:28.225" endtime="20200710 12:01:30.850"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:30.850" endtime="20200710 12:01:31.272"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:01:31.600" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:01:31.272" endtime="20200710 12:01:31.709"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:31.709" endtime="20200710 12:01:31.709"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:31.709" endtime="20200710 12:01:32.120"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:33.131" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:32.120" endtime="20200710 12:01:33.131"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:28.225" endtime="20200710 12:01:33.131"></status>
</kw>
<kw name="Log in to TSO" library="SharedKeywords">
<doc>Logs into TSO using *S5TSO*.</doc>
<kw name="Select menu Option" library="SharedKeywords">
<doc>Selects given *${Option}* from Menu Tubes screen.</doc>
<arguments>
<arg>S5TSO</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:33.131" endtime="20200710 12:01:33.131"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:33.131" endtime="20200710 12:01:33.131"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:33.131" endtime="20200710 12:01:35.760"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:35.760" endtime="20200710 12:01:36.184"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:01:36.512" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:01:36.184" endtime="20200710 12:01:36.621"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:36.621" endtime="20200710 12:01:36.621"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:36.621" endtime="20200710 12:01:37.059"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:01:39.059" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:01:37.059" endtime="20200710 12:01:39.059"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:39.059" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; IKJ56700A ENTER USERID -&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                       
&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:39.059" endtime="20200710 12:01:39.059"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:33.131" endtime="20200710 12:01:39.059"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200710 12:01:39.059" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x0000028872840CD0&gt;</msg>
<status status="PASS" starttime="20200710 12:01:39.059" endtime="20200710 12:01:39.059"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:39.059" endtime="20200710 12:01:39.059"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:39.059" endtime="20200710 12:01:39.496"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:39.496" endtime="20200710 12:01:39.496"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:39.496" endtime="20200710 12:01:39.496"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200710 12:01:39.496" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200710 12:01:39.496" endtime="20200710 12:01:39.496"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:39.496" endtime="20200710 12:01:41.296"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>ispf</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:41.296" endtime="20200710 12:01:41.296"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:41.296" endtime="20200710 12:01:42.999"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>ISPF Primary Option Menu</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:42.999" endtime="20200710 12:01:42.999"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:33.131" endtime="20200710 12:01:42.999"></status>
</kw>
<kw name="Verify Cr Cash Line on table DCTCL_CRED_LN" library="3dot4CrLineMaintenanceKeywords">
<arguments>
<arg>${myAccountIntID}</arg>
<arg>${online_date}</arg>
<arg>${myNew1CreditLineAmount}</arg>
<arg>${myNew1CashLineAmount}</arg>
</arguments>
<kw name="From ISPF go to SQL query" library="SharedKeywords">
<doc>When the system is in TSO, on ISPF screen (first screen), this keyword goes to
the screen where you can enter an SQL query. Used in: 'Verify plastic on table pre-batch',
'verify plastic embossed on CAPI' in NEXI/01a.plastic_setup/PlasticSetupKeywords.robot</doc>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>r</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:42.999" endtime="20200710 12:01:42.999"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:42.999" endtime="20200710 12:01:43.546"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:43.546" endtime="20200710 12:01:43.546"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:43.546" endtime="20200710 12:01:45.052"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:45.052" endtime="20200710 12:01:45.052"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:45.052" endtime="20200710 12:01:45.505"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:45.505" endtime="20200710 12:01:45.505"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:45.505" endtime="20200710 12:01:46.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:47.305" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:46.302" endtime="20200710 12:01:47.305"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>25</arg>
<arg>Enter, Execute and Explain SQL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.305"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:42.999" endtime="20200710 12:01:47.305"></status>
</kw>
<kw name="Send query" library="SharedKeywords">
<doc>Sends given sql query *${Input query}*.</doc>
<arguments>
<arg>SELECT CL_STRT_DT, CL_END_DT, CL_CRD_APV_AM, CL_CASH_AM</arg>
<arg>FROM &amp;{environment}[owner].DCTCL_CRED_LN</arg>
<arg>WHERE AC_INTRL_ID = '${myAccountIntID}'</arg>
<arg>AND CL_ANAL_DT = '${date}'</arg>
<arg>ORDER BY TC_UPDT_TS DESC</arg>
<arg>WITH UR;</arg>
</arguments>
<kw name="${line} IN [ @{Input query} ]" type="for">
<kw name="${line} = SELECT CL_STRT_DT, CL_END_DT, CL_CRD_APV_AM, CL_CASH_AM" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.305"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.305"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.305"></status>
</kw>
<kw name="${line} = FROM RLSEI.DCTCL_CRED_LN" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.305"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.321"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="${line} = WHERE AC_INTRL_ID = ' 28897000000'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="${line} = AND CL_ANAL_DT = '09.07.2020'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="${line} = ORDER BY TC_UPDT_TS DESC" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="${line} = WITH UR;" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.321"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.337"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.321" endtime="20200710 12:01:47.337"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.337"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:47.305" endtime="20200710 12:01:47.337"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:48.342" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:47.337" endtime="20200710 12:01:48.342"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:48.342" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 
 EGKT 2 (DB3)           Enter, Execute and Explain SQL                         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                                &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; SELECT Options:                       EXPLAIN Options:                         
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;    Row count . . . . .&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; 100       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;        Query number  . . .&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;        
                                                                                
    Enter "/" to select option        &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;                                          
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; /&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Show results                     &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                        
                                         &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                     
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; SQL statement:                       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                          
 SELECT CL_STRT_DT, CL_END_DT, CL_CRD_APV_AM, CL_CASH_AM                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; FROM RLSEI.DCTCL_CRED_LN                                                &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; WHERE AC_INTRL_ID = ' 28897000000'                                      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; AND CL_ANAL_DT = '09.07.2020'                                           &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ORDER BY TC_UPDT_TS DESC                                                &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; WITH UR;                                                                &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:48.342" endtime="20200710 12:01:48.342"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:48.342" endtime="20200710 12:01:48.905"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:48.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:49.905" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                 Top of 3&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 3 rows - End of object.                                           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 CL_STRT_DT CL_END_DT      CL_CRD_APV_AM        CL_CASH_AM                      
 #7         #8                       #10               #12                      
 DATE       DATE           DECIMAL(15,2)     DECIMAL(15,2)                      
 &amp;lt;---+----&amp;gt; &amp;lt;---+----&amp;gt; &amp;lt;---+----1----+-&amp;gt; &amp;lt;---+----1----+-&amp;gt;                      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 31.12.2799           5215.00           5215.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5210.00           5210.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5205.00           5205.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
 ****  End of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>Select Statement Browse</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>2</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>13</arg>
<arg>31.12.2799</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 24 | 40 ]" type="for">
<kw name="${INDEX} = 24" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">24</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.905" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.905" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<msg timestamp="20200710 12:01:49.905" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="${INDEX} = 25" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">25</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.905" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.905" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<msg timestamp="20200710 12:01:49.905" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="${INDEX} = 26" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.905" level="INFO">26</msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.905"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.921" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.921" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<msg timestamp="20200710 12:01:49.921" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="${INDEX} = 27" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">27</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.921" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.921" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<msg timestamp="20200710 12:01:49.921" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="${INDEX} = 28" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">28</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.921" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.921" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<msg timestamp="20200710 12:01:49.921" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="${INDEX} = 29" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">29</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.921" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.921" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<msg timestamp="20200710 12:01:49.921" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="${INDEX} = 30" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">30</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.921" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.921" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<msg timestamp="20200710 12:01:49.921" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.921" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.921"></status>
</kw>
<kw name="${INDEX} = 31" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">31</msg>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.937" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.937" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<msg timestamp="20200710 12:01:49.937" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.921" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="${INDEX} = 32" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">32</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.937" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.937" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<msg timestamp="20200710 12:01:49.937" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="${INDEX} = 33" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">33</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.937" level="INFO">${ClCrdApvAm} =  5215.00</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<msg timestamp="20200710 12:01:49.937" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">True</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.905" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">${ClCrdApvAm} =  5215.00</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.937" level="INFO">${ClCrdApvAm} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${CreditLineAmount}</arg>
</arguments>
<assign>
<var>${numberNewCreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:49.937" level="INFO">${numberNewCreditLineAmount} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberNewCreditLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.937" level="INFO">5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
<arg>${numberNewCreditLineAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.937"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:49.952" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                 Top of 3&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 3 rows - End of object.                                           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 CL_STRT_DT CL_END_DT      CL_CRD_APV_AM        CL_CASH_AM                      
 #7         #8                       #10               #12                      
 DATE       DATE           DECIMAL(15,2)     DECIMAL(15,2)                      
 &amp;lt;---+----&amp;gt; &amp;lt;---+----&amp;gt; &amp;lt;---+----1----+-&amp;gt; &amp;lt;---+----1----+-&amp;gt;                      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 31.12.2799           5215.00           5215.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5210.00           5210.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5205.00           5205.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
 ****  End of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:49.937" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 42 | 58 ]" type="for">
<kw name="${INDEX} = 42" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">42</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.952" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.952" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<msg timestamp="20200710 12:01:49.952" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="${INDEX} = 43" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">43</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.952" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.952" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<msg timestamp="20200710 12:01:49.952" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="${INDEX} = 44" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">44</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.952" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.952" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<msg timestamp="20200710 12:01:49.952" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="${INDEX} = 45" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">45</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.952" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.952" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<msg timestamp="20200710 12:01:49.952" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.952" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.952"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="${INDEX} = 46" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">46</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.968" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.968" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<msg timestamp="20200710 12:01:49.968" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="${INDEX} = 47" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">47</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.968" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.968" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<msg timestamp="20200710 12:01:49.968" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="${INDEX} = 48" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">48</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.968" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.968" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<msg timestamp="20200710 12:01:49.968" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="${INDEX} = 49" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">49</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.968" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.968" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<msg timestamp="20200710 12:01:49.968" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.968"></status>
</kw>
<kw name="${INDEX} = 50" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.968" level="INFO">50</msg>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.983" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:01:49.983" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<msg timestamp="20200710 12:01:49.983" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.968" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="${INDEX} = 51" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">51</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.983" level="INFO">${ClCashAm} =  5215.00</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<msg timestamp="20200710 12:01:49.983" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">True</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.952" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">${ClCashAm} =  5215.00</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:01:49.983" level="INFO">${ClCashAm} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${CashLineAmount}</arg>
</arguments>
<assign>
<var>${numberNewCashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:01:49.983" level="INFO">${numberNewCashLineAmount} = 5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberNewCashLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:01:49.983" level="INFO">5215.0</msg>
<status status="PASS" starttime="20200710 12:01:49.983" endtime="20200710 12:01:49.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ClCashAm}</arg>
<arg>${numberNewCashLineAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:49.999" endtime="20200710 12:01:49.999"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:01:49.999" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                 Top of 3&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 3 rows - End of object.                                           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 CL_STRT_DT CL_END_DT      CL_CRD_APV_AM        CL_CASH_AM                      
 #7         #8                       #10               #12                      
 DATE       DATE           DECIMAL(15,2)     DECIMAL(15,2)                      
 &amp;lt;---+----&amp;gt; &amp;lt;---+----&amp;gt; &amp;lt;---+----1----+-&amp;gt; &amp;lt;---+----1----+-&amp;gt;                      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 31.12.2799           5215.00           5215.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5210.00           5210.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5205.00           5205.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
 ****  End of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:01:49.999" endtime="20200710 12:01:49.999"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:42.999" endtime="20200710 12:01:49.999"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:49.999" endtime="20200710 12:01:50.015"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:51.015" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:50.015" endtime="20200710 12:01:51.015"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:49.999" endtime="20200710 12:01:51.015"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywords">
<doc>Logs out of TSO session using *S5TSO* `Sessid`.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:51.015" endtime="20200710 12:01:51.015"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:51.015" endtime="20200710 12:01:51.015"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:51.015" endtime="20200710 12:01:53.640"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:53.640" endtime="20200710 12:01:54.062"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:01:54.390" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:01:54.062" endtime="20200710 12:01:54.499"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:54.499" endtime="20200710 12:01:54.499"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:54.499" endtime="20200710 12:01:54.923"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:01:55.923" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:01:54.923" endtime="20200710 12:01:55.923"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:51.015" endtime="20200710 12:01:55.923"></status>
</kw>
<kw name="Go to CICSK" library="SharedKeywords">
<doc>Opens CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Select menu Option" library="SharedKeywords">
<doc>Selects given *${Option}* from Menu Tubes screen.</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:55.923" endtime="20200710 12:01:55.923"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:01:55.923" endtime="20200710 12:01:55.923"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:55.923" endtime="20200710 12:01:58.548"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:58.548" endtime="20200710 12:01:58.970"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:01:59.299" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:01:58.970" endtime="20200710 12:01:59.408"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200710 12:01:59.408" endtime="20200710 12:01:59.408"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:01:59.408" endtime="20200710 12:01:59.861"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:02:01.863" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:01:59.861" endtime="20200710 12:02:01.863"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:01.863" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:01.863" endtime="20200710 12:02:01.863"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:55.923" endtime="20200710 12:02:01.863"></status>
</kw>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:01.863" endtime="20200710 12:02:01.878"></status>
</kw>
<kw name="XCSR" library="SharedKeywords">
<doc>Opens refreshed screen of CICSK.</doc>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:01.878" endtime="20200710 12:02:01.894"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:01.894" endtime="20200710 12:02:01.894"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:01.894" endtime="20200710 12:02:02.316"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:01.878" endtime="20200710 12:02:02.316"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>1</arg>
<arg>MAIN MENU</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:02.316" endtime="20200710 12:02:02.316"></status>
</kw>
<status status="PASS" starttime="20200710 12:01:55.923" endtime="20200710 12:02:02.316"></status>
</kw>
<kw name="On CCLS Select First Cr Cash Line" library="3dot4CrLineMaintenanceKeywords">
<arguments>
<arg>${myPlastic}</arg>
</arguments>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:02.316" endtime="20200710 12:02:02.332"></status>
</kw>
<kw name="XCSR" library="SharedKeywords">
<doc>Opens refreshed screen of CICSK.</doc>
<kw name="Send Clear" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:02.332" endtime="20200710 12:02:02.332"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>xcsr</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:02.332" endtime="20200710 12:02:02.332"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:02.332" endtime="20200710 12:02:02.754"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:02.332" endtime="20200710 12:02:02.754"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:02.754" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  BRAIN 2.6 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; DATE : 10/07/2020
                              BRAIN 2000 Issuing               TIME :  12.02.02&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 
MAIN MENU                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 53572 Terminal records RESET       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 
--------------------------------------------------------------------------------
 FUNCTION :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;_&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                           BANK CODE :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; BRAIN 2000 Issuing 
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACCOUNT  :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _______________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  FISCAL CODE-IVA :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;         
 SURNAME  :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _________________________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   NAME :&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____________________&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       
  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ** **** ****************************  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ** **** ****************************
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 01&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU01&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CARDHOLDER SETUP/MAINT.       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 09&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU08&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; LOYALTY MANAGEMENT          
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 02&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU02&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CUSTOMER SERVICE              &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 10&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU09&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; FRAUD PROCESSING            
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 03&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU03&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; PRICING                       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 11&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU10&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; INCOMING / OUTGOING         
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 04&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU04&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; FINANCIAL CLAIMS - NOT-ON-US  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 12&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU11&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; THIRD PARTY MANAGEMENT      
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 05&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU05&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; FINANCIAL CLAIMS - ON-US      &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 13&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU12&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; SPECIAL FUNCTIONS           
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 06&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU06&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EXTENDED CREDIT               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 14&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU13&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; GENERAL LEDGER PROCESSING   
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 07&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU07&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE MANAGEMENT        &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 15&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU14&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OUTSTANDING TRANSACTIONS    
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 16&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU15&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; XPSR-MENU                   
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 17&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU16&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; DEBIT CARD PROCESSING       
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 08&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; EXIT&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; EXIT APPLICATION              &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 18&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU17&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; PRE-PAID/PRE-ISSUE CARDS    
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 19&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU18&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CORPORATE CARDS FUNCTIONS   
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                                       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 20&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; MU19&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; XLRD-MENU                   
--------------------------------------------------------------------------------
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 4-MAIN.M 7-PREV.M 8-NEXT.M 12-RESET                                 
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:02.754" endtime="20200710 12:02:02.754"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>FUNCTION</arg>
<arg>CCLS</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:02.754" endtime="20200710 12:02:02.972"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>ACCOUNT</arg>
<arg>${plasticNumber}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:02.972" endtime="20200710 12:02:03.629"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:03.629" endtime="20200710 12:02:04.161"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:05.161" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:04.161" endtime="20200710 12:02:05.161"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:05.161" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLS 1 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT/CASH LINE SELECTION &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.02.03
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  3992 NO MORE CRD LINES             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   (INQ, CCLM)                                     
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
 4935-4700-3109-8491     VALENTINA SERRA            TP VPJ PST AA  PRI ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; SERRA VALENTINA                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRI&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                         &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    REL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   TYPE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;     
 ACTN/                           CRD                CASH           NEXT:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;    1&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   
 SEQ      STRT       EXP    PERM DCSN      CREDIT   DCSN   CSH          CASH    
 (SEL)    DATE       DATE   TEMP LN CD    LINE AMT  LN CD  LN%        LINE AMT  
      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.215  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.215 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 001&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 31/12/2799 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.215  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.215 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 002&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 08/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.210  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.210 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 003&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020 08/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.205  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.205 
&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 004&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020 09/07/2020 P&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW         5.200  NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;    &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;         5.200 
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACCT: OPEN DT  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 01/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    RETURNED MAIL&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; N&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   PGM SOLIC CD&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 41PEFGXX&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          
                                                                                
                    &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                  
 DELQ HISTORY       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   CURR AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                    
 BAL TO LINE RATIO  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH AGE &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 0&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   DT&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    
 PMT TO BAL RATIO   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   HIGH BAL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;               ,00 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;  
                                                 HIGH BAL DT &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;        
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 6-INQ 10-CCLM                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:05.161" endtime="20200710 12:02:05.161"></status>
</kw>
<kw name="Fill Field" library="py3270lib">
<doc>Accepts the Y position (rows from top) and X position (columns from left) as well as some
text to send.  The field is first cleared, then the given text is entered from that location.</doc>
<arguments>
<arg>13</arg>
<arg>2</arg>
<arg>SEL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:05.161" endtime="20200710 12:02:05.161"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:05.161" endtime="20200710 12:02:05.614"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:05.614" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLM 2 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CREDIT LINE MAINT       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.02.05
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     1 ACTION SUCCESSFUL             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;I&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;NQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,NXT,ADD,CHG,DEL)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; SERRA VALENTINA                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRI  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE AMOUNT     &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.215 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   WAIVE CR LINE INC FEE?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
 CREDIT LN DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CREDIT LINE                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH LINE AMOUNT       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.215 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 CASH LINE DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CASH LINE                           
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH PERCENT                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                             
 CASH CAP               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                0 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE START DT                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE EXPIRY DT                &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2799&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LETTER(Y/N)            &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      LETTER ID   &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 5-ADD 6-INQ 9-NXT 10-CCLS -DEL                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:05.614" endtime="20200710 12:02:05.614"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>2</arg>
<arg>51</arg>
<arg>ACTION SUCCESSFUL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:05.614" endtime="20200710 12:02:05.614"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:02.316" endtime="20200710 12:02:05.614"></status>
</kw>
<kw name="On CCLM Change Cr Cash Line" library="3dot4CrLineMaintenanceKeywords">
<arguments>
<arg>${myNew2CreditLineAmount}</arg>
<arg>${myNew2CashLineAmount}</arg>
</arguments>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>CREDIT LINE AMOUNT</arg>
<arg>${newCrLAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:05.614" endtime="20200710 12:02:06.929"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>CASH LINE AMOUNT</arg>
<arg>${newCashLAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:06.929" endtime="20200710 12:02:08.898"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:08.898" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLM 2 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CREDIT LINE MAINT       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.02.05
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     1 ACTION SUCCESSFUL             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; INQ                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,NXT,ADD,CHG,DEL)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; SERRA VALENTINA                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRI  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE AMOUNT     &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 5220             &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   WAIVE CR LINE INC FEE?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
 CREDIT LN DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CREDIT LINE                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH LINE AMOUNT       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 5220&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 CASH LINE DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CASH LINE                           
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH PERCENT                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                             
 CASH CAP               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                0 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE START DT                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE EXPIRY DT                &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2799&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LETTER(Y/N)            &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      LETTER ID   &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 5-ADD 6-INQ 9-NXT 10-CCLS -DEL                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:08.898" endtime="20200710 12:02:08.898"></status>
</kw>
<kw name="Send Pf4" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:08.898" endtime="20200710 12:02:09.039"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:09.039" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; CCLM 2 UCS &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;    CREDIT LINE MAINT       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 10072020 12.02.08
 CCLS      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CO&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 30000&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OP&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ____&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:normal;font-style:normal"&gt;     &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:normal;font-style:normal"&gt;       &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; MS&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     3 CHANGE SUCCESSFUL             
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ACTION:&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:bold;font-style:normal"&gt;C&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;HG                 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; (INQ,NXT,ADD,CHG,DEL)                             
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 310-987-870*0          &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; VALENTINA SERRA            TP VIP AST AR  AR  OUT     1
                                                    TP     PST         ACT     1
 LEGAL    -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; SERRA VALENTINA                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PRI  &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; OBLIGORS -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;          -&amp;gt;&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                            &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; REL  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;      &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; TYPE  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;     
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CREDIT LINE AMOUNT     &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.220 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   WAIVE CR LINE INC FEE?&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;           
 CREDIT LN DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CREDIT LINE                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH LINE AMOUNT       &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;            5.220 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 CASH LINE DECISION CODE&lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; NEW&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; NEW ACCOUNT CASH LINE                           
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; CASH PERCENT                  &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                             
 CASH CAP               &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt;                0 &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE START DT                 &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 09/07/2020&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LINE EXPIRY DT                &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; 31/12/2799&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                      
 LETTER(Y/N)            &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; _&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;      LETTER ID   &lt;/span&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; ___&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; PF:&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; 1-HELP 3-PLVL 4-CHG 5-ADD 6-INQ 9-NXT 10-CCLS -DEL                         
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:09.039" endtime="20200710 12:02:09.039"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>2</arg>
<arg>51</arg>
<arg>CHANGE SUCCESSFUL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:09.039" endtime="20200710 12:02:09.054"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:05.614" endtime="20200710 12:02:09.054"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:09.054" endtime="20200710 12:02:09.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:10.054" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:09.054" endtime="20200710 12:02:10.054"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:09.054" endtime="20200710 12:02:10.054"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywords">
<doc>Logs out of CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:10.054" endtime="20200710 12:02:10.054"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:10.054" endtime="20200710 12:02:10.054"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:10.054" endtime="20200710 12:02:12.683"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:12.683" endtime="20200710 12:02:13.105"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:02:13.433" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:02:13.105" endtime="20200710 12:02:13.543"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:13.543" endtime="20200710 12:02:13.543"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:13.543" endtime="20200710 12:02:13.965"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:14.968" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:13.965" endtime="20200710 12:02:14.968"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:10.054" endtime="20200710 12:02:14.968"></status>
</kw>
<kw name="Log in to TSO" library="SharedKeywords">
<doc>Logs into TSO using *S5TSO*.</doc>
<kw name="Select menu Option" library="SharedKeywords">
<doc>Selects given *${Option}* from Menu Tubes screen.</doc>
<arguments>
<arg>S5TSO</arg>
</arguments>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:14.968" endtime="20200710 12:02:14.968"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:14.968" endtime="20200710 12:02:14.968"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND ${Option}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:14.968" endtime="20200710 12:02:17.595"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:17.595" endtime="20200710 12:02:18.017"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>${Option}</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:02:18.346" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:02:18.017" endtime="20200710 12:02:18.455"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>S</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:18.455" endtime="20200710 12:02:18.455"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:18.455" endtime="20200710 12:02:18.908"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20200710 12:02:20.909" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200710 12:02:18.908" endtime="20200710 12:02:20.909"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:20.909" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:red;background:black;font-weight:bold;font-style:normal"&gt; IKJ56700A ENTER USERID -&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                       
&lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                               
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:20.909" endtime="20200710 12:02:20.909"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:14.968" endtime="20200710 12:02:20.909"></status>
</kw>
<kw name="Credential Getter" library="user_password">
<arguments>
<arg>Cams user</arg>
</arguments>
<assign>
<var>${Cams user}</var>
</assign>
<msg timestamp="20200710 12:02:20.909" level="INFO">${Cams user} = &lt;user_password.user_password.credential_getter.&lt;locals&gt;._cred_getter object at 0x00000288727BB310&gt;</msg>
<status status="PASS" starttime="20200710 12:02:20.909" endtime="20200710 12:02:20.909"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.user}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:20.909" endtime="20200710 12:02:20.909"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:20.909" endtime="20200710 12:02:21.331"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>None</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:21.331" endtime="20200710 12:02:21.331"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${Cams user.password}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:21.331" endtime="20200710 12:02:21.331"></status>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<arguments>
<arg>Info</arg>
</arguments>
<msg timestamp="20200710 12:02:21.331" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20200710 12:02:21.331" endtime="20200710 12:02:21.331"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:21.331" endtime="20200710 12:02:22.803"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>ispf</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:22.803" endtime="20200710 12:02:22.803"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:22.803" endtime="20200710 12:02:25.913"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>ISPF Primary Option Menu</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:25.913" endtime="20200710 12:02:25.913"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:14.968" endtime="20200710 12:02:25.913"></status>
</kw>
<kw name="Verify Cr Cash Line on table DCTCL_CRED_LN" library="3dot4CrLineMaintenanceKeywords">
<arguments>
<arg>${myAccountIntID}</arg>
<arg>${online_date}</arg>
<arg>${myNew2CreditLineAmount}</arg>
<arg>${myNew2CashLineAmount}</arg>
</arguments>
<kw name="From ISPF go to SQL query" library="SharedKeywords">
<doc>When the system is in TSO, on ISPF screen (first screen), this keyword goes to
the screen where you can enter an SQL query. Used in: 'Verify plastic on table pre-batch',
'verify plastic embossed on CAPI' in NEXI/01a.plastic_setup/PlasticSetupKeywords.robot</doc>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>r</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:25.913" endtime="20200710 12:02:25.913"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:25.913" endtime="20200710 12:02:26.413"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:26.413" endtime="20200710 12:02:26.413"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:26.413" endtime="20200710 12:02:27.819"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:27.819" endtime="20200710 12:02:27.819"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:27.819" endtime="20200710 12:02:28.241"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:28.241" endtime="20200710 12:02:28.241"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:28.241" endtime="20200710 12:02:29.055"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:30.062" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:29.055" endtime="20200710 12:02:30.062"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>25</arg>
<arg>Enter, Execute and Explain SQL</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.062"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:25.913" endtime="20200710 12:02:30.062"></status>
</kw>
<kw name="Send query" library="SharedKeywords">
<doc>Sends given sql query *${Input query}*.</doc>
<arguments>
<arg>SELECT CL_STRT_DT, CL_END_DT, CL_CRD_APV_AM, CL_CASH_AM</arg>
<arg>FROM &amp;{environment}[owner].DCTCL_CRED_LN</arg>
<arg>WHERE AC_INTRL_ID = '${myAccountIntID}'</arg>
<arg>AND CL_ANAL_DT = '${date}'</arg>
<arg>ORDER BY TC_UPDT_TS DESC</arg>
<arg>WITH UR;</arg>
</arguments>
<kw name="${line} IN [ @{Input query} ]" type="for">
<kw name="${line} = SELECT CL_STRT_DT, CL_END_DT, CL_CRD_APV_AM, CL_CASH_AM" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.062"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.062"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.062"></status>
</kw>
<kw name="${line} = FROM RLSEI.DCTCL_CRED_LN" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.062"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.077"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="${line} = WHERE AC_INTRL_ID = ' 28897000000'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="${line} = AND CL_ANAL_DT = '09.07.2020'" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="${line} = ORDER BY TC_UPDT_TS DESC" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="${line} = WITH UR;" type="foritem">
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>${line}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="Send Tab" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:30.077"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.077"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:30.062" endtime="20200710 12:02:30.077"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:31.080" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:30.077" endtime="20200710 12:02:31.080"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:31.080" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 
 EGKT 2 (DB3)           Enter, Execute and Explain SQL                         &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                                &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; SELECT Options:                       EXPLAIN Options:                         
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;    Row count . . . . .&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; 100       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;        Query number  . . .&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;        
                                                                                
    Enter "/" to select option        &lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt;                                          
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; /&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Show results                     &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                        
                                         &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;  &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;                                     
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                                
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; SQL statement:                       &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                          
 SELECT CL_STRT_DT, CL_END_DT, CL_CRD_APV_AM, CL_CASH_AM                 &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; FROM RLSEI.DCTCL_CRED_LN                                                &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; WHERE AC_INTRL_ID = ' 28897000000'                                      &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; AND CL_ANAL_DT = '09.07.2020'                                           &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; ORDER BY TC_UPDT_TS DESC                                                &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; WITH UR;                                                                &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                       &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                                                         &lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;       
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:31.080" endtime="20200710 12:02:31.080"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:31.080" endtime="20200710 12:02:31.596"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:32.596" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:31.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:32.596" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                 Top of 4&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4 rows - End of object.                                           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 CL_STRT_DT CL_END_DT      CL_CRD_APV_AM        CL_CASH_AM                      
 #7         #8                       #10               #12                      
 DATE       DATE           DECIMAL(15,2)     DECIMAL(15,2)                      
 &amp;lt;---+----&amp;gt; &amp;lt;---+----&amp;gt; &amp;lt;---+----1----+-&amp;gt; &amp;lt;---+----1----+-&amp;gt;                      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 31.12.2799           5220.00           5220.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5215.00           5215.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5210.00           5210.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5205.00           5205.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
 ****  End of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>3</arg>
<arg>29</arg>
<arg>Select Statement Browse</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>2</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="String Found" library="py3270lib">
<doc>String Found verifies the the specified string (exactly) is found at the specified location.</doc>
<arguments>
<arg>11</arg>
<arg>13</arg>
<arg>31.12.2799</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 24 | 40 ]" type="for">
<kw name="${INDEX} = 24" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.596" level="INFO">24</msg>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.596" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.596" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.596" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<msg timestamp="20200710 12:02:32.596" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.596" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.596"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="${INDEX} = 25" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">25</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.612" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.612" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<msg timestamp="20200710 12:02:32.612" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="${INDEX} = 26" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">26</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.612" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.612" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<msg timestamp="20200710 12:02:32.612" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="${INDEX} = 27" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">27</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.612" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.612" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<msg timestamp="20200710 12:02:32.612" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="${INDEX} = 28" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">28</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.612" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.612" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<msg timestamp="20200710 12:02:32.612" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="${INDEX} = 29" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.612" level="INFO">29</msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.612" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.612"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.627" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<msg timestamp="20200710 12:02:32.627" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.612" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="${INDEX} = 30" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">30</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.627" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.627" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<msg timestamp="20200710 12:02:32.627" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="${INDEX} = 31" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">31</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.627" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.627" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<msg timestamp="20200710 12:02:32.627" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="${INDEX} = 32" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">32</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.627" level="INFO">${ClCrdApvAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.627" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<msg timestamp="20200710 12:02:32.627" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="${INDEX} = 33" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">33</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.627" level="INFO">${ClCrdApvAm} =  5220.00</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<msg timestamp="20200710 12:02:32.627" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">True</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.596" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">${ClCrdApvAm} =  5220.00</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<assign>
<var>${ClCrdApvAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.627" level="INFO">${ClCrdApvAm} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${CreditLineAmount}</arg>
</arguments>
<assign>
<var>${numberNewCreditLineAmount}</var>
</assign>
<msg timestamp="20200710 12:02:32.627" level="INFO">${numberNewCreditLineAmount} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberNewCreditLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.627" level="INFO">5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ClCrdApvAm}</arg>
<arg>${numberNewCreditLineAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.627" endtime="20200710 12:02:32.627"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:32.643" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                 Top of 4&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4 rows - End of object.                                           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 CL_STRT_DT CL_END_DT      CL_CRD_APV_AM        CL_CASH_AM                      
 #7         #8                       #10               #12                      
 DATE       DATE           DECIMAL(15,2)     DECIMAL(15,2)                      
 &amp;lt;---+----&amp;gt; &amp;lt;---+----&amp;gt; &amp;lt;---+----1----+-&amp;gt; &amp;lt;---+----1----+-&amp;gt;                      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 31.12.2799           5220.00           5220.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5215.00           5215.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5210.00           5210.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5205.00           5205.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
 ****  End of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="${INDEX} IN RANGE [ 42 | 58 ]" type="for">
<kw name="${INDEX} = 42" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.643" level="INFO">42</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.643" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.643" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.643" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<msg timestamp="20200710 12:02:32.643" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.643" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="${INDEX} = 43" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.643" level="INFO">43</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.643" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.643" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.643" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<msg timestamp="20200710 12:02:32.643" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.643" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="${INDEX} = 44" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.643" level="INFO">44</msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.643" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.643"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.658" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<msg timestamp="20200710 12:02:32.658" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="${INDEX} = 45" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">45</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.658" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.658" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<msg timestamp="20200710 12:02:32.658" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="${INDEX} = 46" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">46</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.658" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.658" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<msg timestamp="20200710 12:02:32.658" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="${INDEX} = 47" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">47</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.658" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.658" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<msg timestamp="20200710 12:02:32.658" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="${INDEX} = 48" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">48</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.658" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.658" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<msg timestamp="20200710 12:02:32.658" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="${INDEX} = 49" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">49</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.658" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.658" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<msg timestamp="20200710 12:02:32.658" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.658" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.674"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.658" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="${INDEX} = 50" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">50</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.674" level="INFO">${ClCashAm} = </msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">Length is 0</msg>
<msg timestamp="20200710 12:02:32.674" level="FAIL">'' should not be empty.</msg>
<status status="FAIL" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<msg timestamp="20200710 12:02:32.674" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">False</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="${INDEX} = 51" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${INDEX}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">51</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="String Get" library="py3270lib">
<doc>String Get accepts the ypos and xpos of the string to retrieve.  Optionally, a fixed length 
may be specified or a termination string may be specified.  The default terminator is 2 spaces.
When a terminator is used, String Get will return all characters up until the terminator.</doc>
<arguments>
<arg>11</arg>
<arg>${INDEX}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.674" level="INFO">${ClCashAm} =  5220.00</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Not Be Empty</arg>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">Length is 8</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<msg timestamp="20200710 12:02:32.674" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">True</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${status} == True</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.643" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">${ClCashAm} =  5220.00</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<assign>
<var>${ClCashAm}</var>
</assign>
<msg timestamp="20200710 12:02:32.674" level="INFO">${ClCashAm} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ClCashAm}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${CashLineAmount}</arg>
</arguments>
<assign>
<var>${numberNewCashLineAmount}</var>
</assign>
<msg timestamp="20200710 12:02:32.674" level="INFO">${numberNewCashLineAmount} = 5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${numberNewCashLineAmount}</arg>
</arguments>
<msg timestamp="20200710 12:02:32.674" level="INFO">5220.0</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ClCashAm}</arg>
<arg>${numberNewCashLineAmount}</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.674"></status>
</kw>
<kw name="Log Screen" library="py3270lib">
<doc>Log Screen adds an image of the current screen from the terminal emulator to the Robot
Framework test log.</doc>
<msg timestamp="20200710 12:02:32.690" level="INFO" html="yes">&lt;html&gt;
&lt;head&gt;
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;/head&gt;
 &lt;body&gt;
  &lt;table border=0&gt;&lt;tr bgcolor=black&gt;&lt;td&gt;&lt;pre&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt;  Process   Options   Utilities   Help &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;                                         
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 EGKT 2 (DB3)               Select Statement Browse   &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                 Top of 4&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
 Command ===&amp;gt;&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:black;background:red;font-weight:normal;font-style:normal"&gt; &lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt;                                              &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt;       Scroll&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; PAGE&lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; 
&lt;/span&gt;&lt;span style="color:white;background:black;font-weight:bold;font-style:normal"&gt; 4 rows - End of object.                                           &lt;/span&gt;&lt;span style="color:green;background:black;font-weight:normal;font-style:normal"&gt; Format&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:normal;font-style:normal"&gt; TABL&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:bold;font-style:normal"&gt; 
 CL_STRT_DT CL_END_DT      CL_CRD_APV_AM        CL_CASH_AM                      
 #7         #8                       #10               #12                      
 DATE       DATE           DECIMAL(15,2)     DECIMAL(15,2)                      
 &amp;lt;---+----&amp;gt; &amp;lt;---+----&amp;gt; &amp;lt;---+----1----+-&amp;gt; &amp;lt;---+----1----+-&amp;gt;                      
&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt; ****  Top of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 31.12.2799           5220.00           5220.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5215.00           5215.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5210.00           5210.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt; 09.07.2020 08.07.2020           5205.00           5205.00&lt;/span&gt;&lt;span style="color:deepSkyBlue;background:black;font-weight:normal;font-style:normal"&gt;                      
 ****  End of data  ****                                                        
&lt;/span&gt;&lt;span style="color:turquoise;background:black;font-weight:bold;font-style:normal"&gt;                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
 &lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" starttime="20200710 12:02:32.674" endtime="20200710 12:02:32.690"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:25.913" endtime="20200710 12:02:32.690"></status>
</kw>
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:32.690" endtime="20200710 12:02:32.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:33.690" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:32.690" endtime="20200710 12:02:33.690"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:32.690" endtime="20200710 12:02:33.690"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywords">
<doc>Logs out of TSO session using *S5TSO* `Sessid`.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:33.690" endtime="20200710 12:02:33.690"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:33.690" endtime="20200710 12:02:33.690"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:33.690" endtime="20200710 12:02:36.315"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:36.315" endtime="20200710 12:02:36.737"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:02:37.065" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:02:36.737" endtime="20200710 12:02:37.174"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:37.174" endtime="20200710 12:02:37.174"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:37.174" endtime="20200710 12:02:37.596"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:38.602" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:37.596" endtime="20200710 12:02:38.602"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:33.690" endtime="20200710 12:02:38.602"></status>
</kw>
<kw name="Test teardown for 03 Setup" library="03SetupKeywords" type="teardown">
<kw name="Get out of TSO/CICSK/SAREGKT" library="SharedKeywords">
<doc>Gets out of TSO/CICSK/SAREGKT screen and goes to Menu Tubes with all the sessions.</doc>
<kw name="Send Pf19" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:38.602" endtime="20200710 12:02:38.602"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:39.602" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:38.602" endtime="20200710 12:02:39.602"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:38.602" endtime="20200710 12:02:39.602"></status>
</kw>
<kw name="Log out of TSO session" library="SharedKeywords">
<doc>Logs out of TSO session using *S5TSO* `Sessid`.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:39.602" endtime="20200710 12:02:39.602"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:39.602" endtime="20200710 12:02:39.602"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND S5TSO</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:39.602" endtime="20200710 12:02:42.227"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:42.227" endtime="20200710 12:02:42.649"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>S5TSO</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:02:42.977" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:02:42.649" endtime="20200710 12:02:43.087"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:43.087" endtime="20200710 12:02:43.087"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:43.087" endtime="20200710 12:02:43.508"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:44.508" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:43.508" endtime="20200710 12:02:44.508"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:39.602" endtime="20200710 12:02:44.508"></status>
</kw>
<kw name="Log out of CICSK session" library="SharedKeywords">
<doc>Logs out of CICSK session using name of CICSK (e.g. CK35) that is set in `Set environment` Keyword.</doc>
<kw name="Send Pf" library="py3270lib">
<arguments>
<arg>24</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:44.508" endtime="20200710 12:02:44.508"></status>
</kw>
<kw name="Send Pf7" library="py3270lib">
<status status="PASS" starttime="20200710 12:02:44.508" endtime="20200710 12:02:44.508"></status>
</kw>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>FIND &amp;{environment}[cicsk]</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:44.508" endtime="20200710 12:02:47.134"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:47.134" endtime="20200710 12:02:47.555"></status>
</kw>
<kw name="Find Field" library="py3270lib">
<doc>:returns:  tuple consisting of row, column</doc>
<arguments>
<arg>&amp;{environment}[cicsk]</arg>
<arg>RIGHT</arg>
</arguments>
<msg timestamp="20200710 12:02:47.884" level="INFO">to_right_end=80</msg>
<status status="PASS" starttime="20200710 12:02:47.555" endtime="20200710 12:02:47.993"></status>
</kw>
<kw name="Send String" library="py3270lib">
<doc>Send a string to the screen at the current cursor location or at
screen co-ordinates `ypos`/`xpos` if they are both given.
Co-ordinates are 1 based, as listed in the status area of the
terminal.</doc>
<arguments>
<arg>i</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:47.993" endtime="20200710 12:02:47.993"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:47.993" endtime="20200710 12:02:48.415"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200710 12:02:49.419" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200710 12:02:48.415" endtime="20200710 12:02:49.419"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:44.508" endtime="20200710 12:02:49.419"></status>
</kw>
<kw name="Log out of mainframe" library="SharedKeywords">
<doc>Logs out of mainframe.</doc>
<kw name="Fill Field By Label" library="py3270lib">
<arguments>
<arg>Comando ===&gt;</arg>
<arg>logoff</arg>
</arguments>
<status status="PASS" starttime="20200710 12:02:49.419" endtime="20200710 12:02:49.856"></status>
</kw>
<kw name="Send Enter" library="py3270lib">
<doc>Send Enter performs the equivalent of pressing Enter on the keyboard in a terminal emulator.
Send Enter additionally performs the equivalent of a human operator in that it notes the current
content of the screen and after pressing enter waits for a change in what is on the screen.</doc>
<status status="PASS" starttime="20200710 12:02:49.856" endtime="20200710 12:02:50.278"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:49.419" endtime="20200710 12:02:50.278"></status>
</kw>
<status status="PASS" starttime="20200710 12:02:38.602" endtime="20200710 12:02:50.278"></status>
</kw>
<status status="PASS" starttime="20200710 12:00:02.108" endtime="20200710 12:02:50.278" critical="yes"></status>
</test>
<status status="PASS" starttime="20200710 12:00:01.623" endtime="20200710 12:02:50.278"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="3dot4CrLineMaintenance">3dot4CrLineMaintenance</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200710 12:00:02.014" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\NEXI\SharedKeywords.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200710 12:00:02.076" level="ERROR">Error in file 'C:\RobotFramework\PyCharm\NEXI\Environments.robot': Importing test library 'builtin' failed: ModuleNotFoundError: No module named 'builtin'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Python38\Scripts\robot.exe
  C:\RobotFramework\rf-libraries
  c:\program files\python38\python38.zip
  c:\program files\python38\DLLs
  c:\program files\python38\lib
  c:\program files\python38
  c:\program files\python38\lib\site-packages
  c:\program files\python38\lib\site-packages\win32
  c:\program files\python38\lib\site-packages\win32\lib
  c:\program files\python38\lib\site-packages\Pythonwin</msg>
<msg timestamp="20200710 12:00:03.139" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:05.180" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:07.212" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:09.232" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
<msg timestamp="20200710 12:00:11.248" level="WARN">[WinError 10061] No connection could be made because the target machine actively refused it</msg>
</errors>
</robot>
